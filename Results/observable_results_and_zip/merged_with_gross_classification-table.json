[
  {
    "observable_value": "Backdoor.Oldrea",
    "artifact_details": "Described",
    "data_source": "Malware analysis / Threat Intelligence",
    "fine_classification": "Malware",
    "notes": "Payload referenced via MITRE ATT&CK (S0093) that gathers server information.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Backdoor.Oldrea ICS malware plugin",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with MITRE ATT&CK link (S0093)",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) ICS malware plugin relies on Windows networking (WNet) to discover all the servers, including OPC servers, that are reachable by the compromised machine over the network. (Citation: Julian Rrushi, Hassan Farhangi, Clay Howey, Kelly Carmichael, Joey Dabell December 2015)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Backdoor.Oldrea payload",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK (S0093); a known malware payload impacting ICS environments.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload has caused multiple common OPC platforms to intermittently crash. This could cause a denial of service effect on applications reliant on OPC communications. (Citation: ICS-CERT August 2018)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Backdoor.Oldrea RAT",
    "artifact_details": "Described",
    "data_source": "endpoint logs / threat intelligence feeds",
    "fine_classification": "Software/Tool",
    "notes": "Specific RAT with a MITRE ATT&CK reference: https://attack.mitre.org/software/S0093",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) RAT is distributed through trojanized installers planted on compromised vendor sites. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "C2",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference to a command and control server.",
    "description": "Using OPC, a component of [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) gathers any details about connected devices and sends them back to the C2 for the attackers to analyze. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "CLSID",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Identifier for COM objects as collected from the server.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "emails",
    "artifact_details": "Mentioned",
    "data_source": "email server logs",
    "fine_classification": "Email Message",
    "notes": "Emails used as the delivery mechanism for the trojanized installer",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) RAT is distributed through a trojanized installer attached to emails. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "Full: Email Message",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "group count",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Number of groups configured or present on the server.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "OPC",
    "artifact_details": "Mentioned",
    "data_source": "ICS data, network logs",
    "fine_classification": "Industrial Communication Protocol",
    "notes": "OPC is referenced generically as the protocol used, without additional specific details.",
    "description": "Using OPC, a component of [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) gathers any details about connected devices and sends them back to the C2 for the attackers to analyze. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "OPC communications",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Communication Protocol",
    "notes": "Generic reference to the communications method used by OPC-based systems.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload has caused multiple common OPC platforms to intermittently crash. This could cause a denial of service effect on applications reliant on OPC communications. (Citation: ICS-CERT August 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "OPC platforms",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System Platform",
    "notes": "General reference to common platforms that implement OPC standards.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload has caused multiple common OPC platforms to intermittently crash. This could cause a denial of service effect on applications reliant on OPC communications. (Citation: ICS-CERT August 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "System"
  },
  {
    "observable_value": "OPC server information",
    "artifact_details": "Mentioned",
    "data_source": "ICS Data",
    "fine_classification": "OPC Server",
    "notes": "Generic server data (including tag names) that can provide details on the names and function of control devices.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload has the capability of enumerating OPC tags, in addition to more generic OPC server information. The server data and tag names can provide information about the names and function of control devices. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "OPC/OPCUA – new"
  },
  {
    "observable_value": "OPC servers",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "OPC Server",
    "notes": "OPC (OLE for Process Control) servers commonly used in industrial control systems",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) ICS malware plugin relies on Windows networking (WNet) to discover all the servers, including OPC servers, that are reachable by the compromised machine over the network. (Citation: Julian Rrushi, Hassan Farhangi, Clay Howey, Kelly Carmichael, Joey Dabell December 2015)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "OPC/OPCUA – new"
  },
  {
    "observable_value": "OPC tags",
    "artifact_details": "Mentioned",
    "data_source": "ICS Data",
    "fine_classification": "ICS Tag",
    "notes": "The payload enumerates these tags to reveal aspects of control devices.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload has the capability of enumerating OPC tags, in addition to more generic OPC server information. The server data and tag names can provide information about the names and function of control devices. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "ICS Tags – new"
  },
  {
    "observable_value": "OPC version",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Version information of the OPC server component.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "Program ID",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Generic identifier for the server program.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "running state",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Indicates whether or not the server is actively running.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "server bandwidth",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Measures the bandwidth capacity of the server.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "server name",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "The name of the server that is gathered by the payload.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "trojanized installer",
    "artifact_details": "Mentioned",
    "data_source": "email attachments",
    "fine_classification": "Malicious File",
    "notes": "Generic reference to a installer file used to distribute the RAT",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) RAT is distributed through a trojanized installer attached to emails. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "trojanized installer attached to an email",
    "artifact_details": "Mentioned",
    "data_source": "email logs",
    "fine_classification": "Malicious File",
    "notes": "Describes a generic installer file that has been compromised and delivered via email, lacking unique identifiers.",
    "description": "Execution of [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) relies on a user opening a trojanized installer attached to an email. (Citation: Daavid Hentunen, Antti Tikkanen June 2014) (Citation: Kyle Wilhoit)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "trojanized installers",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "File",
    "notes": "Generic reference to compromised installer files planted on vendor sites",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) RAT is distributed through trojanized installers planted on compromised vendor sites. (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "vendor information",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Server Information",
    "notes": "Details regarding the server's vendor.",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process. (Citation: ICS-CERT August 2018) (Citation: Daavid Hentunen, Antti Tikkanen June 2014)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Information"
  },
  {
    "observable_value": "Windows networking (WNet)",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Operating System API",
    "notes": "Windows networking component used by the malware for server discovery",
    "description": "The [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) ICS malware plugin relies on Windows networking (WNet) to discover all the servers, including OPC servers, that are reachable by the compromised machine over the network. (Citation: Julian Rrushi, Hassan Farhangi, Clay Howey, Kelly Carmichael, Joey Dabell December 2015)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "Adobe Flash installer",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Malicious file masquerading as a legitimate Adobe Flash installer.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) is disguised as an Adobe Flash installer. When the file is opened it starts locking the infected computer. (Citation: Orkhan Mamedov, Fedor Sinitsyn, Anton Ivanov October 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Bad Rabbit",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "Malware referenced via MITRE ATT&CK (S0606) that infected IT networks and later industrial networks",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Bad Rabbit ransomware",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "Identified by name and MITRE ATT&CK reference; refers to a ransomware family.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) ransomware spreads through drive-by attacks where insecure websites are compromised. While the target is visiting a legitimate website, a malware dropper is being downloaded from the threat actors infrastructure. (Citation: Orkhan Mamedov, Fedor Sinitsyn, Anton Ivanov October 2017)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "insecure websites",
    "artifact_details": "Mentioned",
    "data_source": "web server logs",
    "fine_classification": "Network Entity",
    "notes": "Refers generically to compromised websites used in the drive-by attack; lacks specific identifying details.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) ransomware spreads through drive-by attacks where insecure websites are compromised. While the target is visiting a legitimate website, a malware dropper is being downloaded from the threat actors infrastructure. (Citation: Orkhan Mamedov, Fedor Sinitsyn, Anton Ivanov October 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "legitimate website",
    "artifact_details": "Mentioned",
    "data_source": "web server logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference to a normally functioning website that unwittingly hosts the malicious dropper download.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) ransomware spreads through drive-by attacks where insecure websites are compromised. While the target is visiting a legitimate website, a malware dropper is being downloaded from the threat actors infrastructure. (Citation: Orkhan Mamedov, Fedor Sinitsyn, Anton Ivanov October 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "malware dropper",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "Generic reference to a payload delivery mechanism downloaded during the attack.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) ransomware spreads through drive-by attacks where insecure websites are compromised. While the target is visiting a legitimate website, a malware dropper is being downloaded from the threat actors infrastructure. (Citation: Orkhan Mamedov, Fedor Sinitsyn, Anton Ivanov October 2017)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "MS17-010 vulnerability",
    "artifact_details": "Actionable-Atomic",
    "data_source": "vulnerability scanning tools",
    "fine_classification": "Vulnerability",
    "notes": "Specifically targeting SMBv1, this vulnerability was exploited by Bad Rabbit to spread across networks",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: Vulnerability",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Vulnerability"
  },
  {
    "observable_value": "SMB service",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Service",
    "notes": "Generic reference to the SMB network service used for lateral movement.",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) can move laterally through industrial networks by means of the SMB service. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark, Zeek",
    "gross_classification": "Service"
  },
  {
    "observable_value": "BlackEnergy",
    "artifact_details": "Described",
    "data_source": "threat intelligence feeds, endpoint logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with a MITRE ATT&CK link (S0089) indicating a specific malware tool.",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) uses HTTP POST request to contact external command and control servers. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "external command and control servers",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Vaguely referenced servers without specific identifiers such as IP addresses or domain names.",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) uses HTTP POST request to contact external command and control servers. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "HTTP POST request",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "HTTP Request",
    "notes": "Generic HTTP method used by malware for command and control communication.",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) uses HTTP POST request to contact external command and control servers. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: network-traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "Malicious Microsoft Word document attachments",
    "artifact_details": "Mentioned",
    "data_source": "Email logs",
    "fine_classification": "Document",
    "notes": "Generic reference to Microsoft Word files used as email attachment payloads.",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) targeted energy sector organizations in a wide reaching email spearphishing campaign. Adversaries utilized malicious Microsoft Word documents attachments. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "oletools",
    "gross_classification": "File"
  },
  {
    "observable_value": "new administrator accounts",
    "artifact_details": "Mentioned",
    "data_source": "account management logs, directory service logs",
    "fine_classification": "User Account",
    "notes": "Accounts created to maintain presence; no specific account details provided",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) utilizes valid user and administrator credentials, in addition to creating new administrator accounts to maintain presence. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: User Account",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "valid user and administrator credentials",
    "artifact_details": "Mentioned",
    "data_source": "authentication logs, system logs",
    "fine_classification": "Authentication Credential",
    "notes": "Generic reference; no specific usernames or passwords provided",
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) utilizes valid user and administrator credentials, in addition to creating new administrator accounts to maintain presence. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: User Account",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "Conficker",
    "artifact_details": "Described",
    "data_source": "security logs",
    "fine_classification": "Software/Tool",
    "notes": "This malware is referenced via its MITRE ATT&CK link, which provides a contextual reference without including indicators such as hash values or filenames.",
    "description": "A [Conficker](https://attack.mitre.org/software/S0608) infection at a nuclear power plant forced the facility to shutdown and go through security procedures involved with such events, with its staff scanning computer systems and going through all the regular checks and motions before putting the plant back into production. (Citation: Catalin Cimpanu April 2016)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "nuclear power plant",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Facility",
    "notes": "Physical critical infrastructure is mentioned without detailed identifiers.",
    "description": "A [Conficker](https://attack.mitre.org/software/S0608) infection at a nuclear power plant forced the facility to temporarily shutdown. (Citation: Catalin Cimpanu April 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Manufacturer/Facility – new"
  },
  {
    "observable_value": "USB thumb drive",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Removable Media",
    "notes": "Generic reference to a USB device suspected of introducing the malware",
    "description": "[Conficker](https://attack.mitre.org/software/S0608) exploits Windows drive shares. Once it has infected a computer, [Conficker](https://attack.mitre.org/software/S0608) automatically copies itself to all visible open drive shares on other computers inside the network. (Citation: Symantec June 2015) Nuclear power plant officials suspect someone brought in [Conficker](https://attack.mitre.org/software/S0608) by accident on a USB thumb drive, either from home or computers found in the power plant's facility. (Citation: Catalin Cimpanu April 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Windows drive shares",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference to shared drives on Windows systems used to propagate malware",
    "description": "[Conficker](https://attack.mitre.org/software/S0608) exploits Windows drive shares. Once it has infected a computer, [Conficker](https://attack.mitre.org/software/S0608) automatically copies itself to all visible open drive shares on other computers inside the network. (Citation: Symantec June 2015) Nuclear power plant officials suspect someone brought in [Conficker](https://attack.mitre.org/software/S0608) by accident on a USB thumb drive, either from home or computers found in the power plant's facility. (Citation: Catalin Cimpanu April 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "Duqu",
    "artifact_details": "Described",
    "data_source": "host-based logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced by name and MITRE ATT&CK link (S0038).",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data from local systems. The modules are named: infostealer 1, infostealer 2 and reconnaissance. (Citation: Symantec)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "infostealer 1",
    "artifact_details": "Described",
    "data_source": "host-based logs",
    "fine_classification": "Software/Tool",
    "notes": "Module downloaded by Duqu for local data collection.",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data from local systems. The modules are named: infostealer 1, infostealer 2 and reconnaissance. (Citation: Symantec)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "infostealer 2",
    "artifact_details": "Described",
    "data_source": "host-based logs",
    "fine_classification": "Software/Tool",
    "notes": "Module downloaded by Duqu for local data collection.",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data from local systems. The modules are named: infostealer 1, infostealer 2 and reconnaissance. (Citation: Symantec)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Infostealer 2",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "A malware module used by Duqu to collect data from Windows Shares.",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data in information repositories, including the Infostealer 2 module that can access data from Windows Shares.(Citation: Symantec)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "reconnaissance",
    "artifact_details": "Described",
    "data_source": "host-based logs",
    "fine_classification": "Software/Tool",
    "notes": "Module downloaded by Duqu for collecting local system data.",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data from local systems. The modules are named: infostealer 1, infostealer 2 and reconnaissance. (Citation: Symantec)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Windows Shares",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Network Entity",
    "notes": "General reference to shared folders on Windows systems, without unique identifiers.",
    "description": "[Duqu](https://attack.mitre.org/software/S0038) downloads additional modules for the collection of data in information repositories, including the Infostealer 2 module that can access data from Windows Shares.(Citation: Symantec)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "EKANS",
    "artifact_details": "Described",
    "data_source": "Threat intelligence feeds, system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with MITRE ATT&CK ID S0605; noted for killing processes and then encrypting them.",
    "description": "Before encrypting the process, [EKANS](https://attack.mitre.org/software/S0605) first kills the process if its name matches one of the processes defined on the kill-list. (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) EKANS also utilizes netsh commands to implement firewall rules that blocks any remote communication with the device. (Citation: Ben Hunter and Fred Gutierrez July 2020)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "internal domain name",
    "artifact_details": "Mentioned",
    "data_source": "network logs (DNS logs)",
    "fine_classification": "Domain Name",
    "notes": "Generic reference without specific details; indicates the DNS lookup target in the network.",
    "description": "[EKANS](https://attack.mitre.org/software/S0605) performs a DNS lookup of an internal domain name associated with its target network to identify if it was deployed on the intended system. (Citation: Ben Hunter and Fred Gutierrez July 2020)",
    "STIX_supported": "Full: DomainName",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "kill-list (list of process names)",
    "artifact_details": "Mentioned",
    "data_source": "Malware binary analysis",
    "fine_classification": "Process Name List",
    "notes": "Internal list used by EKANS to identify processes to kill prior to encryption.",
    "description": "Before encrypting the process, [EKANS](https://attack.mitre.org/software/S0605) first kills the process if its name matches one of the processes defined on the kill-list. (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) EKANS also utilizes netsh commands to implement firewall rules that blocks any remote communication with the device. (Citation: Ben Hunter and Fred Gutierrez July 2020)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "netsh commands",
    "artifact_details": "Mentioned",
    "data_source": "Windows system logs",
    "fine_classification": "Command/Utility",
    "notes": "Utilized by EKANS to implement firewall rules that block remote communication.",
    "description": "Before encrypting the process, [EKANS](https://attack.mitre.org/software/S0605) first kills the process if its name matches one of the processes defined on the kill-list. (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) (Citation: Daniel Kapellmann Zafra, Keith Lunden, Nathan Brubaker, Jeremy Kennelly July 2020) EKANS also utilizes netsh commands to implement firewall rules that blocks any remote communication with the device. (Citation: Ben Hunter and Fred Gutierrez July 2020)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "update.exe",
    "artifact_details": "Actionable-Atomic",
    "data_source": "File system logs",
    "fine_classification": "File",
    "notes": "The filename 'update.exe' is a common executable name used by many valid programs, although it is here noted as a masquerading tactic.",
    "description": "[EKANS](https://attack.mitre.org/software/S0605) masquerades itself as a valid executable with the filename update.exe. Many valid programs use the process name update.exe to perform background software updates. (Citation: Dragos Threat Intelligence February 2020)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "AutoCAD design data",
    "artifact_details": "Mentioned",
    "data_source": "File system",
    "fine_classification": "Document",
    "notes": "Generic reference to design files produced by AutoCAD.",
    "description": "[Flame](https://attack.mitre.org/software/S0143) can collect AutoCAD design data and visio diagrams as well as other documents that may contain operational information. (Citation: Kevin Savage and Branko Spasojevic)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "Flame",
    "artifact_details": "Described",
    "data_source": "Threat intelligence feeds and malware analysis reports",
    "fine_classification": "Software/Tool",
    "notes": "Flame is referenced via a MITRE ATT&CK hyperlink and noted for its built-in information gathering modules on compromised computers.",
    "description": "[Flame](https://attack.mitre.org/software/S0143) has built-in modules to gather information from compromised computers. (Citation: Kevin Savage and Branko Spasojevic)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "other documents containing operational information",
    "artifact_details": "Mentioned",
    "data_source": "File system",
    "fine_classification": "Document",
    "notes": "Refers to additional documents that may disclose operational details.",
    "description": "[Flame](https://attack.mitre.org/software/S0143) can collect AutoCAD design data and visio diagrams as well as other documents that may contain operational information. (Citation: Kevin Savage and Branko Spasojevic)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "visio diagrams",
    "artifact_details": "Mentioned",
    "data_source": "File system",
    "fine_classification": "Document",
    "notes": "Generic reference to diagram files likely created by Microsoft Visio.",
    "description": "[Flame](https://attack.mitre.org/software/S0143) can collect AutoCAD design data and visio diagrams as well as other documents that may contain operational information. (Citation: Kevin Savage and Branko Spasojevic)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "Connected sensors",
    "artifact_details": "Mentioned",
    "data_source": "ICS sensor network data",
    "fine_classification": "Device",
    "notes": "Generic reference to the sensors receiving data, targeted to disrupt sensor data acquisition.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) repeatedly wrote arbitrary data over the Meter-Bus channel from impacted devices to connected sensors to render sensor data acquisition useless.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "external remote services",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Service",
    "notes": "General reference to remote infrastructures used during execution",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) initial execution relied on accessing external remote services for victim environments.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "Fuxnet",
    "artifact_details": "Described",
    "data_source": "Endpoint logs",
    "fine_classification": "Software/Tool",
    "notes": "Known malware referenced via MITRE ATT&CK; execution of this tool is described.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) execution relied upon accessing Internet-accessible devices for initial access and deployment.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "HTTP",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Remote Access Service",
    "notes": "HTTP service is utilized for web-based remote management.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) shut down remote access services such as SSH, HTTP, telnet, and SNMP to a device along with deleting the routing table for routing devices to inhibit system accessibility and communication.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Remote Access – new"
  },
  {
    "observable_value": "Impacted devices",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "Device",
    "notes": "Generic reference to devices affected by the attack without specific identifiers.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) repeatedly wrote arbitrary data over the Meter-Bus channel from impacted devices to connected sensors to render sensor data acquisition useless.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Internet-accessible devices",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference to devices exposed to the Internet without specific details.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) execution relied upon accessing Internet-accessible devices for initial access and deployment.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "Meter-Bus channel",
    "artifact_details": "Described",
    "data_source": "ICS network logs",
    "fine_classification": "Communication Channel",
    "notes": "Specifically names the industrial communication channel used for meter data.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) repeatedly wrote arbitrary data over the Meter-Bus channel from impacted devices to connected sensors to render sensor data acquisition useless.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "NAND memory chips",
    "artifact_details": "Mentioned",
    "data_source": "physical hardware inspection",
    "fine_classification": "Hardware Component",
    "notes": "Generic reference to the memory chips present on impacted devices that were physically destroyed.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) physically destroyed NAND memory chips on impacted devices through repeated bit-flip operations.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Hardware"
  },
  {
    "observable_value": "Routing table",
    "artifact_details": "Mentioned",
    "data_source": "System logs/configuration files",
    "fine_classification": "Network Configuration",
    "notes": "Represents the device's routing table entries that were deleted to inhibit system accessibility and communication.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) shut down remote access services such as SSH, HTTP, telnet, and SNMP to a device along with deleting the routing table for routing devices to inhibit system accessibility and communication.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "SNMP",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Remote Access Service",
    "notes": "Simple Network Management Protocol used for managing devices on IP networks.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) shut down remote access services such as SSH, HTTP, telnet, and SNMP to a device along with deleting the routing table for routing devices to inhibit system accessibility and communication.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Remote Access – new"
  },
  {
    "observable_value": "SSH",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Remote Access Service",
    "notes": "Standard secure shell service used for remote access.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) shut down remote access services such as SSH, HTTP, telnet, and SNMP to a device along with deleting the routing table for routing devices to inhibit system accessibility and communication.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Remote Access – new"
  },
  {
    "observable_value": "telnet",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Remote Access Service",
    "notes": "Telnet is an unencrypted remote access protocol.",
    "description": "[Fuxnet](https://attack.mitre.org/software/S1157) shut down remote access services such as SSH, HTTP, telnet, and SNMP to a device along with deleting the routing table for routing devices to inhibit system accessibility and communication.(Citation: Claroty Fuxnet 2024)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Remote Access – new"
  },
  {
    "observable_value": "Asrock driver (AsrDrv103.sys)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "File system logs / endpoint monitoring",
    "fine_classification": "Driver File",
    "notes": "Vulnerable Asrock driver exploited using CVE-2020-15368",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to exploit a vulnerable Asrock driver (AsrDrv103.sys) using CVE-2020-15368 to load its own unsigned driver on the system.(Citation: Wylie-22)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "CODESYS gateway",
    "artifact_details": "Described",
    "data_source": "ICS Data",
    "fine_classification": "ICS Gateway",
    "notes": "Gateway component running on Schneider PLCs for routing messages.",
    "description": "The [INCONTROLLER](https://attack.mitre.org/software/S1045) PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "CODESYS protocol",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Protocol",
    "notes": "Used to remotely connect to Schneider PLCs for maintenance functions",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the CODESYS protocol to remotely connect to Schneider PLCs and perform maintenance functions on the device.(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use Telnet to upload payloads and execute commands on Omron PLCs. (Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream) The malware can also use HTTP-based CGI scripts (e.g., cpu.fcgi, ecat.fcgi) to gain administrative access to the device.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "CODESYS protocol (UDP port 1740)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Protocol",
    "notes": "Provides a specific protocol and port combination used to target Schneider PLCs.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can brute force password-based authentication to Schneider PLCs over the CODESYS protocol (UDP port 1740).(Citation: CISA-AA22-103A)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can perform brute force guessing of passwords to OPC UA servers using a predefined list of passwords.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "HTTP-based CGI scripts",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Web Script",
    "notes": "Example HTTP-based CGI script used by the malware to gain administrative access",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the CODESYS protocol to remotely connect to Schneider PLCs and perform maintenance functions on the device.(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use Telnet to upload payloads and execute commands on Omron PLCs. (Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream) The malware can also use HTTP-based CGI scripts (e.g., cpu.fcgi, ecat.fcgi) to gain administrative access to the device.(Citation: Wylie-22)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "Custom Modbus command for writing register values",
    "artifact_details": "Mentioned",
    "data_source": "ICS network logs",
    "fine_classification": "ICS Command",
    "notes": "Command used to modify register values on Schneider PLCs",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can send custom Modbus commands to write register values on Schneider PLCs.(Citation: CISA-AA22-103A) \n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can send write tag values on OPC UA servers.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Command"
  },
  {
    "observable_value": "CVE-2020-15368",
    "artifact_details": "Described",
    "data_source": "Vulnerability databases / security advisories",
    "fine_classification": "Vulnerability Identifier",
    "notes": "Specifies the vulnerability used in the exploitation process",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to exploit a vulnerable Asrock driver (AsrDrv103.sys) using CVE-2020-15368 to load its own unsigned driver on the system.(Citation: Wylie-22)",
    "STIX_supported": "Full: Vulnerability",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Vulnerability"
  },
  {
    "observable_value": "CVE-2022-34151",
    "artifact_details": "Actionable-Atomic",
    "data_source": "vulnerability databases",
    "fine_classification": "Vulnerability",
    "notes": "A specific, actionable vulnerability identifier documented as enabling login to Omron PLCs.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can login to Omron PLCs using hardcoded credentials, which is documented in CVE-2022-34151.(Citation: Wylie-22)",
    "STIX_supported": "Full: Vulnerability",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Vulnerability"
  },
  {
    "observable_value": "EtherCat connected servo drives",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Servo Drive",
    "notes": "Devices whose parameters are modified via the HTTP CGI scripts.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the HTTP CGI scripts on Omron PLCs to modify parameters on EtherCat connected servo drives.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "FINS protocol (Factory Interface Network Service)",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Communication Protocol",
    "notes": "Used to scan for and obtain MAC addresses from Omron devices",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "firewall rules",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Firewall Rule",
    "notes": "Generic reference to firewall policies that are bypassed via the added route.",
    "description": "The [INCONTROLLER](https://attack.mitre.org/software/S1045) PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "hardcoded credentials",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Credential",
    "notes": "A generic reference to embedded login credentials without specific values.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can login to Omron PLCs using hardcoded credentials, which is documented in CVE-2022-34151.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "HTTP CGI scripts",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Code snippet",
    "notes": "Generic reference to CGI scripts running on the PLC; no detailed script content provided.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the HTTP CGI scripts on Omron PLCs to modify parameters on EtherCat connected servo drives.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "HTTP server",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Service",
    "notes": "Provides program download and backup transfer functions for Omron PLCs.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the CODESYS protocol to download programs to Schneider PLCs.(Citation: Wylie-22)(Citation: Brubaker-Incontroller) \n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can modified program logic on Omron PLCs using either the program download or backup transfer functions available through the HTTP server.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "HTTPS",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Protocol",
    "notes": "Secure protocol used for communication.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can remotely send commands to a malicious agent uploaded on Omron PLCs over HTTP or HTTPS.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "INCONTROLLER",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced as a MITRE ATT&CK software used to remotely read device information.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can remotely read the OCP UA structure from devices.(Citation: CISA-AA22-103A)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "INCONTROLLER PLCProxy module",
    "artifact_details": "Described",
    "data_source": "ICS Data",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK (S1045); used to add an IP route on Schneider PLCs.",
    "description": "The [INCONTROLLER](https://attack.mitre.org/software/S1045) PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.(Citation: Wylie-22)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "IP route",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Configuration",
    "notes": "Generic reference to a routing table entry added to facilitate message forwarding.",
    "description": "The [INCONTROLLER](https://attack.mitre.org/software/S1045) PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "MAC address",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Identifier",
    "notes": "Generic reference; not a specific MAC address",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "Full: mac-addr",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "malicious agent",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Software/Tool",
    "notes": "Refers to the malware payload uploaded on Omron PLCs.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can remotely send commands to a malicious agent uploaded on Omron PLCs over HTTP or HTTPS.(Citation: CISA-AA22-103A)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "malware implant",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "Malware",
    "notes": "No specific technical details provided aside from its delivery via Telnet.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use a Telnet session to load a malware implant on Omron PLCs.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Modbus connection",
    "artifact_details": "Mentioned",
    "data_source": "ICS network logs",
    "fine_classification": "ICS Network Communication",
    "notes": "The library within INCONTROLLER creates Modbus connections to request a device's ID.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) includes a library that creates Modbus connections with a device to request its device ID.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "Full: network-traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Communication"
  },
  {
    "observable_value": "NetManage protocol",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Communication Protocol",
    "notes": "Protocol used by Schneider PLCs",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "OCP UA structure",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "OPC UA Address Space",
    "notes": "A generic reference to the structure (or address space) of OPC UA on devices.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can remotely read the OCP UA structure from devices.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "OPC/OPCUA – new"
  },
  {
    "observable_value": "Omron devices",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "Generic reference; no specific model provided",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Omron PLCs",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "General reference to Omron PLC devices.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can remotely send commands to a malicious agent uploaded on Omron PLCs over HTTP or HTTPS.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "OPC UA server",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "OPC UA Server",
    "notes": "Generic reference to servers using the OPC UA protocol targeted with brute force password guessing.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can brute force password-based authentication to Schneider PLCs over the CODESYS protocol (UDP port 1740).(Citation: CISA-AA22-103A)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can perform brute force guessing of passwords to OPC UA servers using a predefined list of passwords.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "OPC/OPCUA – new"
  },
  {
    "observable_value": "OPC UA servers",
    "artifact_details": "Mentioned",
    "data_source": "ICS network logs",
    "fine_classification": "Server",
    "notes": "Target servers that support the OPC UA protocol for tag writing",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can send custom Modbus commands to write register values on Schneider PLCs.(Citation: CISA-AA22-103A) \n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can send write tag values on OPC UA servers.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Server"
  },
  {
    "observable_value": "PCAP files",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "File",
    "notes": "Collected output from Tcpdump capturing network traffic",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can deploy Tcpdump to sniff network traffic and collect PCAP files.(Citation: Wylie-22)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark, libpcap",
    "gross_classification": "File"
  },
  {
    "observable_value": "predefined list of passwords",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Credential List",
    "notes": "A generic reference to a set of passwords used by the tool; no specific contents provided.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can brute force password-based authentication to Schneider PLCs over the CODESYS protocol (UDP port 1740).(Citation: CISA-AA22-103A)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can perform brute force guessing of passwords to OPC UA servers using a predefined list of passwords.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "remote HTTP service",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Service",
    "notes": "Refers to the remote HTTP interface used to reset settings and wipe memory.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can wipe the memory of Omron PLCs and reset settings through the remote HTTP service.(Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream)(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Zeek, Wireshark",
    "gross_classification": "Service"
  },
  {
    "observable_value": "Schneider PLC",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "General reference to Schneider Electric programmable logic controllers with no specific model details.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can brute force password-based authentication to Schneider PLCs over the CODESYS protocol (UDP port 1740).(Citation: CISA-AA22-103A)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can perform brute force guessing of passwords to OPC UA servers using a predefined list of passwords.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Schneider PLCs",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "Target industrial control devices with unspecified model details",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can send custom Modbus commands to write register values on Schneider PLCs.(Citation: CISA-AA22-103A) \n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can send write tag values on OPC UA servers.(Citation: CISA-AA22-103A)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "TCP port 4840",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "Port used for OPC UA server scanning",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "Tcpdump",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Used to sniff network traffic as deployed by INCONTROLLER",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can deploy Tcpdump to sniff network traffic and collect PCAP files.(Citation: Wylie-22)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Telnet",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Protocol",
    "notes": "Used to upload payloads and execute commands on PLCs",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the CODESYS protocol to remotely connect to Schneider PLCs and perform maintenance functions on the device.(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use Telnet to upload payloads and execute commands on Omron PLCs. (Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream) The malware can also use HTTP-based CGI scripts (e.g., cpu.fcgi, ecat.fcgi) to gain administrative access to the device.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "Telnet session",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Connection",
    "notes": "A generic Telnet communication session used to load the implant.",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use a Telnet session to load a malware implant on Omron PLCs.(Citation: CISA-AA22-103A)(Citation: Wylie-22)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Communication"
  },
  {
    "observable_value": "UDP port 27127",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "Port used for NetManage protocol scanning",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.(Citation: Dragos-Pipedream)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.(Citation: CISA-AA22-103A)(Citation: Wylie-22)\n \n [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.(Citation: Wylie-22)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "0x01 status",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Protocol Value",
    "notes": "A specific hexadecimal status output that equates to a 'Primary Variable Out of Limits' alert, used to misdirect operators.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Protocol Field"
  },
  {
    "observable_value": "ABB PCM600 configuration files",
    "artifact_details": "Described",
    "data_source": "file system logs",
    "fine_classification": "ICS Configuration File",
    "notes": "Specifically targeted by the destructive wiper",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has a destructive wiper that overwrites all ICS configuration files across the hard drives and all mapped network drives specifically targeting ABB PCM600 configuration files. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "command line parameter for payload DLL",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Command Line Argument",
    "notes": "The parameter through which the payload DLLâ€™s name is supplied; no explicit value is provided.",
    "description": "The name of the [Industroyer](https://attack.mitre.org/software/S0604) payload DLL is supplied by the attackers via a command line parameter supplied in one of the main backdoors execute a shell command commands. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Configuration file",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Configuration File",
    "notes": "A generic configuration file used to specify the COM port mapping.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) uses the first COM port from the configuration file for the communication and the other two COM ports are opened to prevent other processes accessing them. This may block processes or operators from getting reporting messages from a device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "connected network adapters",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Network Device",
    "notes": "Generic reference to all network interfaces present on a system.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contains an IEC 61850 module that enumerates all connected network adapters to determine their TCP/IP subnet masks. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "control devices",
    "artifact_details": "Mentioned",
    "data_source": "ICS network communications / asset inventories",
    "fine_classification": "ICS Device",
    "notes": "Refers to generic control devices (e.g., PLCs, IEDs) in the industrial control environment.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) automatically collects protocol object data to learn about control devices in the environment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "DNS",
    "artifact_details": "Mentioned",
    "data_source": "DNS logs",
    "fine_classification": "Network traffic",
    "notes": "Used by EKANS to perform lookups and confirm it is on the intended network",
    "description": "[EKANS](https://attack.mitre.org/software/S0605) performs a DNS lookup of an internal domain name associated with its target network to identify if it was deployed on the intended system. (Citation: Ben Hunter and Fred Gutierrez July 2020)",
    "STIX_supported": "yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "built-in modules",
    "artifact_details": "Mentioned",
    "data_source": "Endpoint / Host logs",
    "fine_classification": "Software/Tool",
    "notes": "Used by Flame to gather information from compromised computers",
    "description": "[Flame](https://attack.mitre.org/software/S0143) has built-in modules to gather information from compromised computers. (Citation: Kevin Savage and Branko Spasojevic)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Remote HTTP connection",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Service",
    "notes": "Used by INCONTROLLER to change Omron PLC operating mode",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can establish a remote HTTP connection to change the operating mode of Omron PLCs. (Citation: Dragos-Pipedream)(Citation: Wylie-22)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "HTTP-based CGI scripts (cpu.fcgi; ecat.fcgi)",
    "artifact_details": "Actionable",
    "data_source": "Network / Web server logs",
    "fine_classification": "Script",
    "notes": "Used by INCONTROLLER to gain administrative privileges",
    "description": "[INCONTROLLER](https://attack.mitre.org/software/S1045) can use the CODESYS protocol to remotely connect to Schneider PLCs and perform maintenance functions on the device. (Citation: Wylie-22) [INCONTROLLER](https://attack.mitre.org/software/S1045) can use Telnet to upload payloads and execute commands on Omron PLCs. (Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream) The malware can also use HTTP-based CGI scripts (e.g., cpu.fcgi; ecat.fcgi) to gain administrative access to the device. (Citation: Wylie-22)",
    "STIX_supported": "Full: URL",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "Industroyer",
    "artifact_details": "Mentioned",
    "data_source": "Threat intelligence / Detection logs",
    "fine_classification": "Software/Tool",
    "notes": "Automatically collects protocol object data to learn about control devices in the environment",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) automatically collects protocol object data to learn about control devices in the environment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "protocol object data",
    "artifact_details": "Mentioned",
    "data_source": "ICS logs / Network traffic logs",
    "fine_classification": "Protocol Object Data",
    "notes": "Collected by Industroyer to learn about control devices in the environment",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) automatically collects protocol object data to learn about control devices in the environment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "Siemens SIPROTEC",
    "artifact_details": "Described",
    "data_source": "ICS logs / Device logs",
    "fine_classification": "Device",
    "notes": "Targeted by Industroyer module exploiting CVE-2015-5374",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "CVE-2015-5374",
    "artifact_details": "Described",
    "data_source": "Vulnerability scanning / Patch management logs",
    "fine_classification": "Vulnerability",
    "notes": "Exploited by Industroyer for Denial of Service",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "Full: Vulnerability",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Vulnerability"
  },
  {
    "observable_value": "IEC 61850 module",
    "artifact_details": "Described",
    "data_source": "ICS logs / Network traffic logs",
    "fine_classification": "Module",
    "notes": "Used by Industroyer to enumerate network adapters and subnet masks",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) uses IEC 61850 module to enumerate network adapters and subnet masks.",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "TCP/IP subnet masks",
    "artifact_details": "Described",
    "data_source": "Network logs / System logs",
    "fine_classification": "Network Data",
    "notes": "Identified by Industroyer module to map network structure",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) identified TCP/IP subnet masks to map network structure.",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "ICS configuration files",
    "artifact_details": "Mentioned",
    "data_source": "File system / ICS logs",
    "fine_classification": "File",
    "notes": "Overwritten by Industroyer wiper",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has a destructive wiper that overwrites all ICS configuration files across the hard drives and all mapped network drives specifically targeting ABB PCM600 configuration files. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "unauthorized command messages",
    "artifact_details": "Mentioned",
    "data_source": "ICS logs / Network traffic logs",
    "fine_classification": "Command Message",
    "notes": "Used by Industroyer to toggle breakers to open state",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) toggles breakers to the open state utilizing unauthorized command messages. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "COM ports",
    "artifact_details": "Described",
    "data_source": "Endpoint / Device logs",
    "fine_classification": "Device",
    "notes": "Utilized by Industroyer IEC 101 payload to control RTU devices",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the other two COM ports are opened to prevent other processes accessing them, enabling the IEC 101 payload component to control RTU devices. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "OPC module",
    "artifact_details": "Described",
    "data_source": "ICS logs / Network traffic logs",
    "fine_classification": "Module",
    "notes": "Used by Industroyer to manipulate tag values",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "OPC tag values",
    "artifact_details": "Described",
    "data_source": "ICS logs / Network traffic logs",
    "fine_classification": "Data",
    "notes": "Written to by Industroyer OPC module causing operational disruptions",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "payload DLL",
    "artifact_details": "Described",
    "data_source": "File system / Endpoint logs",
    "fine_classification": "File",
    "notes": "Executed by Industroyer main backdoor using shell commands",
    "description": "The name of the [Industroyer](https://attack.mitre.org/software/S0604) payload DLL is supplied by the attackers via a command line parameter in one of the main backdoors. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "18 byte UDP payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Exploit Payload",
    "notes": "Exact payload bytes used in the exploitation process.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. (Citation: Anton Cherepanov, ESET June 2017) Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Artifact",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Payload"
  },
  {
    "observable_value": "automated protective relays",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Protective Relay",
    "notes": "Generic reference to relays targeted by the Denial of Service attack",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "breakers",
    "artifact_details": "Mentioned",
    "data_source": "ICS operational data",
    "fine_classification": "Electrical Device",
    "notes": "Refers to circuit breakers toggled to the open state as part of the attack procedure.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) toggles breakers to the open state utilizing unauthorized command messages. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Hardware"
  },
  {
    "observable_value": "CATID_OPCDAServer20 category identifier",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "Identifier Constant",
    "notes": "Category identifier passed to the API to filter for OPC DA servers.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "first COM port from the configuration file",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Configuration File",
    "notes": "Holds COM port configuration details.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Configuration file (Industroyer)",
    "artifact_details": "Mentioned",
    "data_source": "file system logs",
    "fine_classification": "Configuration File",
    "notes": "Holds settings including the COM port assignments used by Industroyer.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "CSW value",
    "artifact_details": "Described",
    "data_source": "ICS logs",
    "fine_classification": "ICS Parameter",
    "notes": "Indicator within logical nodes signifying circuit breaker or switch control functionality.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "ctlOperOff",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "ctlOperOn",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "ctlSelOff",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "ctlSelOn",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Execute packet (IEC 104)",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "ICS Command",
    "notes": "Packet sent to switch state during the first stage of range mode",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 104 module has 3 modes available to perform its attack. These modes are range, shift, and sequence. The range mode operates in 2 stages. The first stage of range mode gathers Information Object Addresses (IOA) and sends select and execute packets to switch the state. The second stage of range mode has an infinite loop where it will switch the state of all of the previously discovered IOAs. Shift mode is similar to range mode, but instead of staying within the same range, it will add a shift value to the default range values. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Command"
  },
  {
    "observable_value": "external C2 server",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "C2 Server",
    "notes": "A vague reference to the server contacted via the internal proxy without further identifying details.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) attempts to connect with a hardcoded internal proxy on TCP 3128 [default Squid proxy]. If established, the backdoor attempts to reach an external C2 server via the internal proxy. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Server"
  },
  {
    "observable_value": "firmware update mode",
    "artifact_details": "Mentioned",
    "data_source": "System logs",
    "fine_classification": "ICS Command",
    "notes": "The operational state induced on the victim device to disable its normal safeguarding functions.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module places the victim device into firmware update mode. This is a legitimate use case under normal circumstances, but in this case is used the adversary to prevent the SIPROTEC from performing its designed protective functions. As a result the normal safeguards are disabled, leaving an unprotected link in the electric transmission. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "First COM port from configuration file",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Serial Port",
    "notes": "The COM port selected by the configuration file for communication by Industroyer.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) uses the first COM port from the configuration file for the communication and the other two COM ports are opened to prevent other processes accessing them. This may block processes or operators from getting reporting messages from a device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "First COM port from the configuration file",
    "artifact_details": "Mentioned",
    "data_source": "configuration files",
    "fine_classification": "Communication Port",
    "notes": "This port is used for actual communication in Industroyer.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "hardcoded internal proxy on TCP 3128 (default Squid proxy)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Proxy Server",
    "notes": "Specifies the connector used by Industroyer for internal communication.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) attempts to connect with a hardcoded internal proxy on TCP 3128 [default Squid proxy]. If established, the backdoor attempts to reach an external C2 server via the internal proxy. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Server"
  },
  {
    "observable_value": "ICatInformation::EnumClassesOfCategories method",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "API Call",
    "notes": "Windows COM API method used by the OPC DA module to enumerate classes of OPC servers.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "IEC 101 payload component",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Payload Component",
    "notes": "Enables takeover and maintenance of control of the RTU device.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Payload"
  },
  {
    "observable_value": "IEC 61850 protocol module",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "ICS Protocol Module",
    "notes": "Module used by Industroyer for IEC 61850 communications.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC and IEC 61850 protocol modules include the ability to send stVal requests to read the status of operational variables. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Module"
  },
  {
    "observable_value": "stop a service",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Service Control",
    "notes": "Capability used by Industroyer to disrupt operations by terminating services.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has the capability to stop a service itself, or to login as a user and stop a service as that user. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "destructive wiper",
    "artifact_details": "Mentioned",
    "data_source": "malware analysis",
    "fine_classification": "Malware Module",
    "notes": "Used by Industroyer to delete or overwrite ICS configuration files.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has a destructive wiper that overwrites all ICS configuration files across the hard drives and all mapped network drives specifically targeting ABB PCM600 configuration files. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "mapped network drives",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Storage Device",
    "notes": "Storage paths also targeted for file wiping by Industroyer.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has a destructive wiper that overwrites all ICS configuration files across the hard drives and all mapped network drives specifically targeting ABB PCM600 configuration files. (Citation: Dragos Inc. June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "data wiper component",
    "artifact_details": "Mentioned",
    "data_source": "malware analysis",
    "fine_classification": "Malware Module",
    "notes": "Component responsible for destructive actions affecting system availability.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s data wiper component removes the registry image path throughout the system and overwrites all files, rendering the system unusable. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "Industroyer IEC 104 module",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK (S0604)",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 104 module has 3 modes available to perform its attack. These modes are range, shift, and sequence. The range mode operates in 2 stages. The first stage of range mode gathers Information Object Addresses (IOA) and sends select and execute packets to switch the state. The second stage of range mode has an infinite loop where it will switch the state of all of the previously discovered IOAs. Shift mode is similar to range mode, but instead of staying within the same range, it will add a shift value to the default range values. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Industroyer IEC 60870-5-104 module",
    "artifact_details": "Described",
    "data_source": "ICS network logs",
    "fine_classification": "Software/Tool",
    "notes": "Module that uses a range mode to discover Information Object Addresses (IOAs) via enumeration.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Industroyer IEC 61850 component",
    "artifact_details": "Described",
    "data_source": "ICS network logs",
    "fine_classification": "Software/Tool",
    "notes": "Component of Industroyer that uses IEC 61850 protocol to send requests.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Industroyer IEC 61850 payload component",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "This payload component is used to discover devices in the infected host's subnet via connection attempts on port 102.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Industroyer OPC DA module",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Module within Industroyer that enumerates OPC servers using specific COM API calls.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Industroyer OPC module",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "A module within the Industroyer malware that brute forces OPC values and sends misleading status messages.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "brute force values",
    "artifact_details": "Described",
    "data_source": "malware behavior",
    "fine_classification": "Data Manipulation",
    "notes": "Used by the OPC module to inject or test input values against the control system.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Data Manipulation – new"
  },
  {
    "observable_value": "protective relay status",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "Operational condition of protective relays being misrepresented.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Industroyer payload DLL",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "File",
    "notes": "The DLL used as the payload in the Industroyer attack, referenced without a specific filename.",
    "description": "The name of the [Industroyer](https://attack.mitre.org/software/S0604) payload DLL is supplied by the attackers via a command line parameter supplied in one of the main backdoors execute a shell command commands. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "pefile",
    "gross_classification": "File"
  },
  {
    "observable_value": "Industroyer SIPROTEC DoS module",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK; specific tool targeting Siemens SIPROTEC devices.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. (Citation: Anton Cherepanov, ESET June 2017) Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Information Object Addresses (IOA)",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "ICS Address",
    "notes": "Addresses gathered during the first stage of range mode",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 104 module has 3 modes available to perform its attack. These modes are range, shift, and sequence. The range mode operates in 2 stages. The first stage of range mode gathers Information Object Addresses (IOA) and sends select and execute packets to switch the state. The second stage of range mode has an infinite loop where it will switch the state of all of the previously discovered IOAs. Shift mode is similar to range mode, but instead of staying within the same range, it will add a shift value to the default range values. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "IOPCBrowseServerAddressSpace",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS logs",
    "fine_classification": "ICS Command",
    "notes": "Function call used by the OPC DA module to enumerate address space items.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "IOPCServer::GetStatus method",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "API Call",
    "notes": "Method used by the OPC DA module to query the operational status of OPC servers.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "main backdoor used for executing commands",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Refers generically to the backdoor employed in the attack without a specific identifier.",
    "description": "The name of the [Industroyer](https://attack.mitre.org/software/S0604) payload DLL is supplied by the attackers via a command line parameter supplied in one of the main backdoors execute a shell command commands. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "MMSgetNameList request",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Domain-specific MMS request sent by the IEC 61850 component to enumerate logical nodes.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "OPC protocol module",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "ICS Protocol Module",
    "notes": "Module used by Industroyer for OPC communications.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC and IEC 61850 protocol modules include the ability to send stVal requests to read the status of operational variables. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Module"
  },
  {
    "observable_value": "Other two COM ports",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Serial Port",
    "notes": "These ports are opened to block other processes from accessing them, potentially preventing reporting messages.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) uses the first COM port from the configuration file for the communication and the other two COM ports are opened to prevent other processes accessing them. This may block processes or operators from getting reporting messages from a device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "Other two COM ports from configuration file",
    "artifact_details": "Mentioned",
    "data_source": "configuration file",
    "fine_classification": "Serial Port",
    "notes": "Opened to prevent other processes from accessing them.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "Port 102",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "The network port targeted by the IEC 61850 payload component for device discovery.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.(Citation: Anton Cherepanov, ESET June 2017)\n\n[Industroyer](https://attack.mitre.org/software/S0604) contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running.",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "Pos",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "String",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "protocol payloads",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "ICS Communication Payload",
    "notes": "Refers to the payloads used by Industroyer to deliver commands over the network.",
    "description": "Using its protocol payloads, [Industroyer](https://attack.mitre.org/software/S0604) sends unauthorized commands to RTUs to change the state of equipment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Payload"
  },
  {
    "observable_value": "state of equipment",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "Targeted operational condition altered by malicious command.",
    "description": "Using its protocol payloads, [Industroyer](https://attack.mitre.org/software/S0604) sends unauthorized commands to RTUs to change the state of equipment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "registry image path",
    "artifact_details": "Mentioned",
    "data_source": "Windows Registry",
    "fine_classification": "Registry Key",
    "notes": "Generic reference to a registry key value that is removed by the data wiper component.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s data wiper component removes the registry image path throughout the system and overwrites all files, rendering the system unusable. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Full: Windows Registry Key",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "RegRipper",
    "gross_classification": "Registry – new"
  },
  {
    "observable_value": "RTU device",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System Device",
    "notes": "The target industrial device whose control is maintained via the IEC 101 payload.",
    "description": "In [Industroyer](https://attack.mitre.org/software/S0604) the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "RTUs",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System Device",
    "notes": "Remote Terminal Units targeted by the attacker's commands.",
    "description": "Using its protocol payloads, [Industroyer](https://attack.mitre.org/software/S0604) sends unauthorized commands to RTUs to change the state of equipment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Select packet (IEC 104)",
    "artifact_details": "Described",
    "data_source": "Network logs",
    "fine_classification": "ICS Command",
    "notes": "Packet sent to switch state during the first stage of range mode",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 104 module has 3 modes available to perform its attack. These modes are range, shift, and sequence. The range mode operates in 2 stages. The first stage of range mode gathers Information Object Addresses (IOA) and sends select and execute packets to switch the state. The second stage of range mode has an infinite loop where it will switch the state of all of the previously discovered IOAs. Shift mode is similar to range mode, but instead of staying within the same range, it will add a shift value to the default range values. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Command"
  },
  {
    "observable_value": "shift mode",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Attack Technique",
    "notes": "Another attack mode used by the module",
    "description": NaN,
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Attack Technique"
  },
  {
    "observable_value": "range mode",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Attack Technique",
    "notes": "Attack mode that gathers IOAs and sends control packets",
    "description": NaN,
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Attack Technique"
  },
  {
    "observable_value": "denial of control",
    "artifact_details": "Mentioned",
    "data_source": "system behavior",
    "fine_classification": "Attack Effect",
    "notes": "Resulting condition when serial communication is blocked.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) is able to block serial COM channels temporarily causing a denial of control. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "STIX Attack"
  },
  {
    "observable_value": "serial COM channels",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Communication Interface",
    "notes": "Generic reference to standard serial communication ports affected by the attack",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) is able to block serial COM channels temporarily causing a denial of control. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "denial of view",
    "artifact_details": "Mentioned",
    "data_source": "system behavior",
    "fine_classification": "Attack Effect",
    "notes": "Resulting effect where operators lose visibility into device status.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) is able to block serial COM channels temporarily causing a denial of view. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "STIX Attack"
  },
  {
    "observable_value": "shell command executed by backdoor",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Command",
    "notes": "Indicates that a shell command is executed by the backdoor, though the exact command is not specified.",
    "description": "The name of the [Industroyer](https://attack.mitre.org/software/S0604) payload DLL is supplied by the attackers via a command line parameter supplied in one of the main backdoors execute a shell command commands. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Siemens SIPROTEC device",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Device",
    "notes": "Target device rendered unresponsive by the exploit.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. (Citation: Anton Cherepanov, ESET June 2017) Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Siemens SIPROTEC relays",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control Device",
    "notes": "Specific vendor product that was exploited using CVE-2015-5374",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Denial of Service",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Attack Technique",
    "notes": "General impact description, not uniquely actionable",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Attack Technique"
  },
  {
    "observable_value": "SIPROTEC",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Device",
    "notes": "The victimâ€™s protective relay device targeted by the DoS module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module places the victim device into firmware update mode. This is a legitimate use case under normal circumstances, but in this case is used the adversary to prevent the SIPROTEC from performing its designed protective functions. As a result the normal safeguards are disabled, leaving an unprotected link in the electric transmission. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "SIPROTEC DoS module",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Software/Tool",
    "notes": "A module from Industroyer used to force the device into an unintended firmware update mode.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module places the victim device into firmware update mode. This is a legitimate use case under normal circumstances, but in this case is used the adversary to prevent the SIPROTEC from performing its designed protective functions. As a result the normal safeguards are disabled, leaving an unprotected link in the electric transmission. (Citation: Joe Slowik August 2019)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "stVal",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "String",
    "notes": "Search string used by the OPC DA module.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "logical nodes",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Object",
    "notes": NaN,
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "ICS Object – new"
  },
  {
    "observable_value": "Information Object Addresses (IOAs)",
    "artifact_details": "Actionable-Computed",
    "data_source": "network logs",
    "fine_classification": "ICS Object",
    "notes": "IEC 60870-5-104 IOA enumeration",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604)'s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.(Citation: ESET Industroyer)\n\n[Industroyer](https://attack.mitre.org/software/S0604) IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.(Citation: ESET Industroyer)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "ICS Object – new"
  },
  {
    "observable_value": "stVal requests",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network traffic",
    "fine_classification": "Protocol Field",
    "notes": "Protocol-specific request used to retrieve operational variable values.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC and IEC 61850 protocol modules include the ability to send stVal requests to read the status of operational variables. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol Field"
  },
  {
    "observable_value": "operational variables",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Variable State",
    "notes": "Targeted telemetry data representing the state of ICS devices.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604)'s OPC and IEC 61850 protocol modules include the ability to send stVal requests to read the status of operational variables. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "target IP addresses",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference; no specific IP addresses provided.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. (Citation: Anton Cherepanov, ESET June 2017) Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "UDP packet to port 50000",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Network Packet",
    "notes": "Packet is crafted and sent via UDP to the specified port.",
    "description": "The [Industroyer](https://attack.mitre.org/software/S0604) SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. (Citation: Anton Cherepanov, ESET June 2017) Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Data"
  },
  {
    "observable_value": "unauthorized commands",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Commands sent to RTUs to change the state of equipment.",
    "description": "Using its protocol payloads, [Industroyer](https://attack.mitre.org/software/S0604) sends unauthorized commands to RTUs to change the state of equipment. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Application Service Data Unit (ASDU) addresses",
    "artifact_details": "Mentioned",
    "data_source": "ICS Data",
    "fine_classification": "ICS Protocol Field",
    "notes": "Generic ICS protocol component targeted by the malware with no unique identifiers.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) modifies specified Information Object Addresses (IOAs) for specified Application Service Data Unit (ASDU) addresses to either the ON or OFF state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol Field"
  },
  {
    "observable_value": "command messages",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "ICS Command Message",
    "notes": "Generic command messages sent from the compromised device.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Common Address (CA)",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Protocol Field",
    "notes": "A protocol field used in industrial communication to address devices.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Protocol Field"
  },
  {
    "observable_value": "connection status",
    "artifact_details": "Mentioned",
    "data_source": "ICS data, system logs",
    "fine_classification": "Device Status Parameter",
    "notes": "Generic parameter representing the connection state of a device.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "data transfer status",
    "artifact_details": "Mentioned",
    "data_source": "ICS data, system logs",
    "fine_classification": "Device Status Parameter",
    "notes": "Generic parameter indicating the current data transfer condition of a device.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "device's IOAs",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Parameter",
    "notes": "Generic reference to the I/O addresses on an industrial device.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) can iterate across a deviceâ€™s IOAs to modify the ON/OFF value of a given IO state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "General Interrogation command",
    "artifact_details": "Mentioned",
    "data_source": "ICS network logs",
    "fine_classification": "ICS Command",
    "notes": "Generic command used to query monitored devices in ICS environments.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) uses a General Interrogation command to monitor the deviceâ€™s Information Object Addresses (IOAs) and their IO state values.(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "hardcoded list of remote-station IP addresses",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "General reference to IP addresses embedded within the malware for communication initiation.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) leverages a hardcoded list of remote-station IP addresses to iteratively initiate communications and collect information across multiple priority IEC-104 priority levels.(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "Full: IPv4-Addr",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "IEC-104 priority levels",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Protocol",
    "notes": "Indicates use of IEC-104 protocol priority levels in communication, a standard in industrial systems.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) leverages a hardcoded list of remote-station IP addresses to iteratively initiate communications and collect information across multiple priority IEC-104 priority levels.(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "Industroyer2",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with MITRE ATT&CK URL and cited in Mandiant April 2022 and Forescout July 2022 reports.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) can iterate across a deviceâ€™s IOAs to modify the ON/OFF value of a given IO state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "remote-station",
    "artifact_details": "Mentioned",
    "data_source": "device inventory",
    "fine_classification": "Remote Terminal Unit",
    "notes": "Field devices targeted for communication by Industroyer2.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) leverages a hardcoded list of remote-station IP addresses to iteratively initiate communications and collect information across multiple priority IEC-104 priority levels.(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "SCADA – new"
  },
  {
    "observable_value": "ON state",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "State used by Industroyer2 to enable targeted devices or processes.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) modifies specified Information Object Addresses (IOAs) for specified Application Service Data Unit (ASDU) addresses to either the ON or OFF state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Invert Default State operations",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Command",
    "notes": "Operation that modifies the established default states of IOs.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "IO state",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Parameter",
    "notes": "Represents the modifiable ON/OFF state of an I/O point.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) can iterate across a deviceâ€™s IOAs to modify the ON/OFF value of a given IO state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "ON/OFF value",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "State modified by Industroyer2 to disrupt or control the targeted device operations.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) can iterate across a device’s IOAs to modify the ON/OFF value of a given IO state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "IO state values",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Field",
    "notes": "Represents the current state values of inputs/outputs across multiple priority levels.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Protocol Field"
  },
  {
    "observable_value": "PService_PDD.exe",
    "artifact_details": "Actionable-Atomic",
    "data_source": "System logs",
    "fine_classification": "Executable file",
    "notes": "Exact process name that can be used in endpoint process monitoring.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to terminate specified processes (i.e., PServiceControl.exe and PService_PDD.exe) and rename each process to prevent restart. These are defined through a hardcoded configuration.(Citation: Industroyer2 Mandiant April 2022)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Sysmon",
    "gross_classification": "File"
  },
  {
    "observable_value": "PServiceControl.exe",
    "artifact_details": "Actionable-Atomic",
    "data_source": "System logs",
    "fine_classification": "Executable file",
    "notes": "Exact process name that can be used in endpoint process monitoring.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to terminate specified processes (i.e., PServiceControl.exe and PService_PDD.exe) and rename each process to prevent restart. These are defined through a hardcoded configuration.(Citation: Industroyer2 Mandiant April 2022)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Sysmon",
    "gross_classification": "File"
  },
  {
    "observable_value": "terminate specified processes",
    "artifact_details": "Described",
    "data_source": "process logs",
    "fine_classification": "Process Termination",
    "notes": "Action taken by Industroyer2 to disrupt specific system processes.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to terminate specified processes (i.e., PServiceControl.exe and PService_PDD.exe) and rename each process to prevent restart. These are defined through a hardcoded configuration.(Citation: Industroyer2 Mandiant April 2022)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Process"
  },
  {
    "observable_value": "Select Before Operate I/O",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Command",
    "notes": "Operation used to modify IO state values with a preliminary select step.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Select/Execute",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Command",
    "notes": "Command operation to alter IO state values immediately after selection.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "compromised device",
    "artifact_details": "Mentioned",
    "data_source": "device inventory",
    "fine_classification": "Host Device",
    "notes": "Device infected by Industroyer2, serving as origin for malicious command messages.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "System"
  },
  {
    "observable_value": "target device",
    "artifact_details": "Mentioned",
    "data_source": "system logs, ICS data",
    "fine_classification": "ICS Device",
    "notes": "A generic reference to the device that is being polled.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "multiple priority levels",
    "artifact_details": "Mentioned",
    "data_source": "protocol analysis",
    "fine_classification": "Communication Priority Level",
    "notes": "Priority categories leveraged by Industroyer2 when polling target device data.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.(Citation: Industroyer2 Forescout July 2022)(Citation: Industroyer2 ESET April 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Communication Priority – new"
  },
  {
    "observable_value": "ICS application",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Application",
    "notes": "One of the two non-standard processes targeted; only noted as an ICS application with no additional specifics.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) looks for and terminates two non-standard processes, one of which is an ICS application. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "KillDisk",
    "artifact_details": "Described",
    "data_source": "Process execution logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with a MITRE ATT&CK link (S0607) providing specific identification.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) erases the master boot record (MBR) and system logs, leaving the system unusable. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "master boot record (MBR)",
    "artifact_details": "Mentioned",
    "data_source": "Disk data",
    "fine_classification": "Boot Record",
    "notes": "A generic system component without unique identifying details.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) erases the master boot record (MBR) and system logs, leaving the system unusable. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "non-standard process",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Process",
    "notes": "A generic process that does not conform to expected norms; no further identifying details provided.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) looks for and terminates two non-standard processes, one of which is an ICS application. (Citation: Anton Cherepanov)",
    "STIX_supported": "Full: Process",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Process"
  },
  {
    "observable_value": "system files",
    "artifact_details": "Mentioned",
    "data_source": "File system",
    "fine_classification": "File",
    "notes": "Generic reference to operating system files targeted for deletion to render the system unbootable.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) is able to delete system files to make the system unbootable and targets 35 different types of files for deletion. (Citation: Anton Cherepanov)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "35 different types of files",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "File Type",
    "notes": "File types targeted by KillDisk to ensure comprehensive destruction of system data.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) is able to delete system files to make the system unbootable and targets 35 different types of files for deletion. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "system logs",
    "artifact_details": "Mentioned",
    "data_source": "System logs",
    "fine_classification": "Log Files",
    "notes": "Generic operating system log files.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) erases the master boot record (MBR) and system logs, leaving the system unusable. (Citation: Booz Allen Hamilton)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Log"
  },
  {
    "observable_value": "Windows Application Event Log",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Event Log",
    "notes": "Generic reference to the application event log on Windows.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) deletes application, security, setup, and system event logs from Windows systems. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "Evtx",
    "gross_classification": "Log"
  },
  {
    "observable_value": "Windows Security Event Log",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Event Log",
    "notes": "Generic reference to the security event log on Windows.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) deletes application, security, setup, and system event logs from Windows systems. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "Evtx",
    "gross_classification": "Log"
  },
  {
    "observable_value": "Windows Setup Event Log",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Event Log",
    "notes": "Generic reference to the setup event log on Windows.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) deletes application, security, setup, and system event logs from Windows systems. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "Evtx",
    "gross_classification": "Log"
  },
  {
    "observable_value": "Windows System Event Log",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Event Log",
    "notes": "Generic reference to the system event log on Windows.",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) deletes application, security, setup, and system event logs from Windows systems. (Citation: Anton Cherepanov)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "Evtx",
    "gross_classification": "Log"
  },
  {
    "observable_value": "LockerGoga",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "LockerGoga is referenced as the malware involved in the infection and is linked to its MITRE ATT&CK entry (S0372)",
    "description": "While Norsk Hydro attempted to recover from a [LockerGoga](https://attack.mitre.org/software/S0372) infection, most of its 160 manufacturing locations switched to manual (non-IT driven) operations. Manual operations can result in a loss of productivity. (Citation: Kevin Beaumont)(Citation: Hydro)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "160 manufacturing locations",
    "artifact_details": "Described",
    "data_source": "facility records",
    "fine_classification": "Manufacturing Facility",
    "notes": "Locations impacted by LockerGoga, forced to operate manually.",
    "description": "While Norsk Hydro attempted to recover from a [LockerGoga](https://attack.mitre.org/software/S0372) infection, most of its 160 manufacturing locations switched to manual (non-IT driven) operations. Manual operations can result in a loss of productivity. (Citation: Kevin Beaumont)(Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Manufacturer/Facility – new"
  },
  {
    "observable_value": "production systems",
    "artifact_details": "Mentioned",
    "data_source": "device inventory",
    "fine_classification": "ICS Systems",
    "notes": "Systems impacted by LockerGoga causing operational disruption.",
    "description": "Some of Norsk Hydro's production systems were impacted by a [LockerGoga](https://attack.mitre.org/software/S0372) infection. This resulted in a loss of view which forced the company to switch to manual operations. (Citation: Kevin Beaumont) (Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "System"
  },
  {
    "observable_value": "Norsk Hydro production systems",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System",
    "notes": "General reference to the impacted production systems with no detailed technical specifics.",
    "description": "Some of Norsk Hydro's production systems were impacted by a [LockerGoga](https://attack.mitre.org/software/S0372) infection. This resulted in a loss of control which forced the company to switch to manual operations. (Citation: Kevin Beaumont) (Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "System"
  },
  {
    "observable_value": "SMBv1-targeting MS17-010 vulnerability",
    "artifact_details": "Actionable-Atomic",
    "data_source": "vulnerability scanners",
    "fine_classification": "Vulnerability",
    "notes": "Specifically targets SMBv1 and was exploited by NotPetya",
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: Vulnerability",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Vulnerability"
  },
  {
    "observable_value": "NotPetya",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with a MITRE ATT&CK link (S0368)",
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) can move laterally through industrial networks by means of the SMB service. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "IT networks",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Segment",
    "notes": "Initial infection targets of NotPetya before lateral spread.",
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Network – new"
  },
  {
    "observable_value": "manufacturing facilities",
    "artifact_details": "Mentioned",
    "data_source": "facility records",
    "fine_classification": "Manufacturing Facility",
    "notes": "Facilities impacted by NotPetya causing production halt.",
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) disrupted manufacturing facilities supplying vaccines, resulting in a halt of production and the inability to meet demand for specific vaccines. (Citation: David Voreacos, Katherine Chinglinsky, Riley Griffin December 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Manufacturer/Facility – new"
  },
  {
    "observable_value": "industrial networks",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Segment",
    "notes": "Network segments traversed by NotPetya using SMB lateral movement.",
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) can move laterally through industrial networks by means of the SMB service. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Network – new"
  },
  {
    "observable_value": "Data Block",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Program Organization Unit",
    "notes": "Generic POU element in PLC programming.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) copies itself to various Program Organization Units (POU) on the target device.  The POUs include the Data Block, Function, and Function Block. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "POU"
  },
  {
    "observable_value": "executable Program Organization Units",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Code",
    "notes": "Represents the PLC code (commonly defined by the IEC 61131-3 standard) that is loaded via the API.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) utilizes the PLC communication and management API to load executable Program Organization Units. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Function",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Program Organization Unit",
    "notes": "Generic POU element in PLC programming.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) copies itself to various Program Organization Units (POU) on the target device.  The POUs include the Data Block, Function, and Function Block. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "POU"
  },
  {
    "observable_value": "Function Block",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Program Organization Unit",
    "notes": "Generic POU element in PLC programming.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) copies itself to various Program Organization Units (POU) on the target device.  The POUs include the Data Block, Function, and Function Block. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "POU"
  },
  {
    "observable_value": "OB9999",
    "artifact_details": "Actionable-Atomic",
    "data_source": "PLC program memory",
    "fine_classification": "PLC Organization Block",
    "notes": "Specifically identified organization block in the PLC that contains the PLC-Blaster code.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006)'s code is stored in OB9999. The original code on the target is untouched. The OB is automatically detected by the PLC and executed. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "POU"
  },
  {
    "observable_value": "PLC",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "PLC",
    "notes": "Generic reference to the programmable logic controller that automatically detects and executes the OB.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006)'s code is stored in OB9999. The original code on the target is untouched. The OB is automatically detected by the PLC and executed. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "PLC communication and management API",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "API",
    "notes": "A generic reference to the API used for PLC communications and management, typically provided by vendor documentation.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) utilizes the PLC communication and management API to load executable Program Organization Units. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "PLC-Blaster",
    "artifact_details": "Mentioned",
    "data_source": "PLC program memory",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK; its code is stored in OB9999.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006)'s code is stored in OB9999. The original code on the target is untouched. The OB is automatically detected by the PLC and executed. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "cycle time limit",
    "artifact_details": "Described",
    "data_source": "device configuration",
    "fine_classification": "PLC Runtime Constraint",
    "notes": "Timing constraint that, when violated, causes the PLC to halt execution.",
    "description": "The execution on the PLC can be stopped by violating the cycle time limit. The [PLC-Blaster](https://attack.mitre.org/software/S1006) implements an endless loop triggering an error condition within the PLC with the impact of a DoS. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Program Organization Units (POU)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "device memory",
    "fine_classification": "PLC Code Component",
    "notes": "Code areas targeted by PLC-Blaster for replication and persistence.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) copies itself to various Program Organization Units (POU) on the target device.  The POUs include the Data Block, Function, and Function Block. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "POU POKE",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS logs",
    "fine_classification": "ICS Command",
    "notes": "A PLC command used to modify any value within the process image.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) may manipulate any outputs of the PLC. Using the POU POKE any value within the process image may be modified. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Siemens S7 PLC device",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "Refers to industrial control system devices manufactured by Siemens running the S7 protocol.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) scans the network to find other Siemens S7 PLC devices to infect. It locates these devices by checking for a service listening on TCP port 102. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "target PLC",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "The programmable logic controller that is targeted by the attack and restarted after the worm copies itself.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) stops the execution of the user program on the target to enable the transfer of its own code. The worm then copies itself to the target and subsequently starts the target PLC again. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "TCON",
    "artifact_details": "Described",
    "data_source": "ICS data (PLC logs)",
    "fine_classification": "ICS Command",
    "notes": "System function block used to initiate TCP connections.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "TCP connection",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic TCP connection created/destroyed by the executed function blocks.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Zeek, Wireshark",
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "TCP port 102",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Service/Port",
    "notes": "The procedure checks for a service actively listening on TCP port 102, a well-known port used by Siemens S7 PLC communication.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) scans the network to find other Siemens S7 PLC devices to infect. It locates these devices by checking for a service listening on TCP port 102. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "TDISCON",
    "artifact_details": "Described",
    "data_source": "ICS data (PLC logs)",
    "fine_classification": "ICS Command",
    "notes": "System function block used to destroy TCP connections.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "TRCV",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data (PLC logs)",
    "fine_classification": "ICS Command",
    "notes": "System function block used for receiving buffers over established TCP connections.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "TSEND",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data (PLC logs)",
    "fine_classification": "ICS Command",
    "notes": "System function block used for sending buffers over established TCP connections.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "user program",
    "artifact_details": "Mentioned",
    "data_source": "ICS system logs",
    "fine_classification": "Software/Program",
    "notes": "The legitimate program executing on the target PLC that is halted to enable transfer of malicious code.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) stops the execution of the user program on the target to enable the transfer of its own code. The worm then copies itself to the target and subsequently starts the target PLC again. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "worm",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Malware",
    "notes": "Refers to the self-replicating code that copies itself to the target; may be functionally equivalent to PLC-Blaster.",
    "description": "[PLC-Blaster](https://attack.mitre.org/software/S1006) stops the execution of the user program on the target to enable the transfer of its own code. The worm then copies itself to the target and subsequently starts the target PLC again. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Ahnlab autoup.exe service",
    "artifact_details": "Actionable-Atomic",
    "data_source": "System logs",
    "fine_classification": "Service/Process",
    "notes": "Specifies the exact service name that REvil targets for payload injection.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) searches for whether the Ahnlab autoup.exe service is running on the target system and injects its payload into this existing process. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: Process",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "C2 system",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Entity",
    "notes": "The actual details (e.g., IP address or domain) of the command and control system are not provided.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends exfiltrated data from the victims system using HTTPS POST messages sent to the C2 system. (Citation: McAfee Labs October 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "encrypted sensitive files used by OT equipment",
    "artifact_details": "Mentioned",
    "data_source": "System Logs/File System",
    "fine_classification": "File",
    "notes": "General reference to files that were encrypted; no specific file names, paths, or hashes provided.",
    "description": "The [REvil](https://attack.mitre.org/software/S0496) malware gained access to an organizations network and encrypted sensitive files used by OT equipment. (Citation: Selena Larson, Camille Singleton December 2020)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "HTTPS POST message",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Communication",
    "notes": "Indicates the method used to exfiltrate data using standard HTTPS protocol.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends exfiltrated data from the victims system using HTTPS POST messages sent to the C2 system. (Citation: McAfee Labs October 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Communication"
  },
  {
    "observable_value": "HTTPS POST messages",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Communication",
    "notes": "Standard communication messages used over HTTPS; no specific parameters provided.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends HTTPS POST messages with randomly generated URLs to communicate with a remote server. (Citation: Tom Fakterman August 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Zeek",
    "gross_classification": "Communication"
  },
  {
    "observable_value": "JavaScript file",
    "artifact_details": "Mentioned",
    "data_source": "email attachment logs",
    "fine_classification": "File",
    "notes": "Generic reference to a JavaScript file executed upon click",
    "description": "[REvil](https://attack.mitre.org/software/S0496) initially executes when the user clicks on a JavaScript file included in the phishing emails .zip attachment. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "Malicious JavaScript attachment",
    "artifact_details": "Described",
    "data_source": "email attachments, file system",
    "fine_classification": "Script File",
    "notes": "This attachment delivers the payload and contains an embedded obfuscated PowerShell script.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) utilizes JavaScript, WScript, and PowerShell scripts to execute. The malicious JavaScript attachment has an obfuscated PowerShell script that executes the malware. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "Obfuscated PowerShell script",
    "artifact_details": "Described",
    "data_source": "file system, PowerShell logs",
    "fine_classification": "Code Snippet",
    "notes": "Embedded within the malicious JavaScript attachment and obfuscated to evade detection.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) utilizes JavaScript, WScript, and PowerShell scripts to execute. The malicious JavaScript attachment has an obfuscated PowerShell script that executes the malware. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "OT equipment",
    "artifact_details": "Mentioned",
    "data_source": "ICS Data",
    "fine_classification": "Industrial Control System (ICS) Device",
    "notes": "Generic reference to operational technology hardware with no additional identifying details.",
    "description": "The [REvil](https://attack.mitre.org/software/S0496) malware gained access to an organizations network and encrypted sensitive files used by OT equipment. (Citation: Selena Larson, Camille Singleton December 2020)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "phishing emails .zip attachment",
    "artifact_details": "Mentioned",
    "data_source": "email logs",
    "fine_classification": "File",
    "notes": "ZIP file attached to phishing emails containing the JavaScript file",
    "description": "[REvil](https://attack.mitre.org/software/S0496) initially executes when the user clicks on a JavaScript file included in the phishing emails .zip attachment. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "prc field",
    "artifact_details": "Mentioned",
    "data_source": "configuration file",
    "fine_classification": "Configuration Parameter",
    "notes": "A field within the configuration file that lists the processes to be terminated.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) searches for all processes listed in the prc field within its configuration file and then terminates each process. (Citation: McAfee Labs October 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "randomly generated URLs",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "URL",
    "notes": "URLs are dynamically generated with no fixed pattern, making them non-actionable without further specifics.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends HTTPS POST messages with randomly generated URLs to communicate with a remote server. (Citation: Tom Fakterman August 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "Full: URL",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Zeek",
    "gross_classification": "URL – new"
  },
  {
    "observable_value": "remote server",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference; lacks specific address details for detection.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends HTTPS POST messages with randomly generated URLs to communicate with a remote server. (Citation: Tom Fakterman August 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "REvil",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced via MITRE ATT&CK link (S0496)",
    "description": "[REvil](https://attack.mitre.org/software/S0496) initially executes when the user clicks on a JavaScript file included in the phishing emails .zip attachment. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": ".zip attachment",
    "artifact_details": "Described",
    "data_source": "file system",
    "fine_classification": "Archive File",
    "notes": "Archive containing the malicious JavaScript file used to deploy REvil.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) initially executes when the user clicks on a JavaScript file included in the phishing emails .zip attachment. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "exfiltrated data",
    "artifact_details": "Described",
    "data_source": "network traffic",
    "fine_classification": "Data Transfer",
    "notes": "Sensitive victim data sent by REvil to a remote C2 server.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) sends exfiltrated data from the victims system using HTTPS POST messages sent to the C2 system. (Citation: McAfee Labs October 2019) (Citation: SecureWorks September 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "REvil configuration file",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Configuration File",
    "notes": "Generic configuration file used by REvil; no specific file path or format provided.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) searches for all processes listed in the prc field within its configuration file and then terminates each process. (Citation: McAfee Labs October 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "process termination",
    "artifact_details": "Described",
    "data_source": "process logs",
    "fine_classification": "Process Termination",
    "notes": "Technique used by REvil to disable running applications.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) searches for all processes listed in the prc field within its configuration file and then terminates each process. (Citation: McAfee Labs October 2019)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Process"
  },
  {
    "observable_value": "REvil malware",
    "artifact_details": "Described",
    "data_source": "Threat Intelligence Feeds",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with a MITRE ATT&CK link indicating a known malware family.",
    "description": "The [REvil](https://attack.mitre.org/software/S0496) malware gained access to an organizations network and encrypted sensitive files used by OT equipment. (Citation: Selena Larson, Camille Singleton December 2020)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "SMB protocol",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Network Protocol",
    "notes": "Generic reference to the SMB protocol used for file sharing.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) uses the SMB protocol to encrypt files located on remotely connected file shares. (Citation: Max Heinemeyer February 2020)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "WScript",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Script Engine/Interpreter",
    "notes": "Used to execute scripts on Windows.",
    "description": "[REvil](https://attack.mitre.org/software/S0496) utilizes JavaScript, WScript, and PowerShell scripts to execute. The malicious JavaScript attachment has an obfuscated PowerShell script that executes the malware. (Citation: Tom Fakterman August 2019)",
    "STIX_supported": "Full: Process",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "login as a user",
    "artifact_details": "Described",
    "data_source": "system authentication",
    "fine_classification": "User Account",
    "notes": "Used by Industroyer to escalate privileges and stop services under user context.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) has the capability to stop a service itself, or to login as a user and stop a service as that user. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "open state",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "State manipulated by Industroyer to disable power distribution.",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) toggles breakers to the open state utilizing unauthorized command messages. (Citation: Anton Cherepanov, ESET June 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "OFF state",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Device State",
    "notes": "State used by Industroyer2 to disable targeted devices or processes.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) modifies specified Information Object Addresses (IOAs) for specified Application Service Data Unit (ASDU) addresses to either the ON or OFF state.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "remote stations",
    "artifact_details": "Mentioned",
    "data_source": "device inventory",
    "fine_classification": "Remote Terminal Unit",
    "notes": "Targeted field devices receiving malicious commands from Industroyer2.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "SCADA – new"
  },
  {
    "observable_value": "data channels",
    "artifact_details": "Mentioned",
    "data_source": "network traffic",
    "fine_classification": "Communication Channel",
    "notes": "Channels opened by Industroyer2 for data retrieval and manipulation of IOA values.",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.(Citation: Industroyer2 Mandiant April 2022)(Citation: Industroyer2 Forescout July 2022)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Communication"
  },
  {
    "observable_value": "loss of view",
    "artifact_details": "Mentioned",
    "data_source": "system behavior",
    "fine_classification": "Attack Effect",
    "notes": "Visibility disruption caused by LockerGoga, leading to reliance on manual controls.",
    "description": "Some of Norsk Hydro's production systems were impacted by a [LockerGoga](https://attack.mitre.org/software/S0372) infection. This resulted in a loss of view which forced the company to switch to manual operations. (Citation: Kevin Beaumont) (Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "STIX Attack"
  },
  {
    "observable_value": "manual operations",
    "artifact_details": "Mentioned",
    "data_source": "operational response",
    "fine_classification": "Operational Mode",
    "notes": "Operational state resulting from LockerGoga’s impact on visibility.",
    "description": "Some of Norsk Hydro's production systems were impacted by a [LockerGoga](https://attack.mitre.org/software/S0372) infection. This resulted in a loss of view which forced the company to switch to manual operations. (Citation: Kevin Beaumont) (Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Operational – new"
  },
  {
    "observable_value": "manual (non-IT driven) operations",
    "artifact_details": "Mentioned",
    "data_source": "operational response",
    "fine_classification": "Operational Mode",
    "notes": "Mode adopted by Norsk Hydro as response to LockerGoga infection.",
    "description": "While Norsk Hydro attempted to recover from a [LockerGoga](https://attack.mitre.org/software/S0372) infection, most of its 160 manufacturing locations switched to manual (non-IT driven) operations. Manual operations can result in a loss of productivity. (Citation: Kevin Beaumont)(Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Operational – new"
  },
  {
    "observable_value": "loss of productivity",
    "artifact_details": "Mentioned",
    "data_source": "business records",
    "fine_classification": "Impact Condition",
    "notes": "Resulting consequence from operating manually due to",
    "description": "While Norsk Hydro attempted to recover from a [LockerGoga](https://attack.mitre.org/software/S0372) infection, most of its 160 manufacturing locations switched to manual (non-IT driven) operations. Manual operations can result in a loss of productivity. (Citation: Kevin Beaumont)(Citation: Hydro)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Impact – new"
  },
  {
    "observable_value": "vaccines",
    "artifact_details": "Mentioned",
    "data_source": "product inventory",
    "fine_classification": "Medical Product",
    "notes": "Products whose supply was disrupted by NotPetya malware.",
    "description": "[NotPetya](https:",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "endless loop",
    "artifact_details": "Described",
    "data_source": "malware behavior",
    "fine_classification": "Malicious Logic",
    "notes": "Logic implemented by PLC-Blaster to consume cycle time and trigger DoS.",
    "description": "The execution on the PLC can be stopped by violating the cycle time limit. The [PLC-Blaster](https://attack.mitre.org/software/S1006) implements an endless loop triggering an error condition within the PLC with the impact of a DoS. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "error condition",
    "artifact_details": "Described",
    "data_source": "device telemetry",
    "fine_classification": "Error State",
    "notes": "State induced in PLCs by PLC-Blaster to disrupt operation.",
    "description": "The execution on the PLC can be stopped by violating the cycle time limit. The [PLC-Blaster](https://attack.mitre.org/software/S1006) implements an endless loop triggering an error condition within the PLC with the impact of a DoS. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Error – new"
  },
  {
    "observable_value": "DoS",
    "artifact_details": "Described",
    "data_source": "system behavior",
    "fine_classification": "Attack Effect",
    "notes": "Denial-of-service condition caused by PLC-Blaster on the target device.",
    "description": "The execution on the PLC can be stopped by violating the cycle time limit. The [PLC-Blaster](https://attack.mitre.org/software/S1006) implements an endless loop triggering an error condition within the PLC with the impact of a DoS. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "STIX Attack"
  },
  {
    "observable_value": "WannaCry",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "Software/Tool",
    "notes": "Referenced with a MITRE ATT&CK link which provides further context, but no detection-specific unique data.",
    "description": "[WannaCry](https://attack.mitre.org/software/S0366) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "SMBv1",
    "artifact_details": "Described",
    "data_source": "network traffic",
    "fine_classification": "Protocol Version",
    "notes": "Legacy Windows file sharing protocol targeted by the MS17-010 exploit",
    "description": "[WannaCry](https://attack.mitre.org/software/S0366) initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "https://attack.mitre.org/software/S0366",
    "artifact_details": "Actionable-Atomic",
    "data_source": "web logs",
    "fine_classification": "URL",
    "notes": "MITRE ATT&CK reference link for WannaCry",
    "description": "[WannaCry](https://attack.mitre.org/software/S0366) can move laterally through industrial networks by means of the SMB service. (Citation: Joe Slowik April 2019)",
    "STIX_supported": "Full: URL",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "URL – new"
  },
  {
    "observable_value": "s7otbxdx.dll",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file system",
    "fine_classification": "DLL File",
    "notes": "A specifically named DLL responsible for PLC communications that is renamed/replaced by Stuxnet.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) renames s7otbxdx.dll, a dll responsible for handling communications with a PLC. It replaces this dll file with its own version that allows it to intercept any calls that are made to access the PLC. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "pefile",
    "gross_classification": "File"
  },
  {
    "observable_value": "Stuxnet",
    "artifact_details": "Described",
    "data_source": "system logs, file system",
    "fine_classification": "Software/Tool",
    "notes": "Malware that performs DLL replacement; referenced with a MITRE link.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) renames s7otbxdx.dll, a dll responsible for handling communications with a PLC. It replaces this dll file with its own version that allows it to intercept any calls that are made to access the PLC. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "6ES7-315-2 CPU (Series 300)",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "PLC CPU",
    "notes": "Targeted by Stuxnet with special system data block characteristics for sequences A/B and C.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "DWORD at offset 50h with value 0100CB2Ch",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "Signature Value",
    "notes": "Indicates that the system uses the Profibus communications processor module CP 342-5.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "KFC750V3 frequency converter drive",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "Frequency Converter Drive",
    "notes": "Also known as a variable frequency drive; associated with hex value 7050h and manufactured by Fararo Paya in Teheran, Iran.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Hardware"
  },
  {
    "observable_value": "Profibus communications processor module CP 342-5",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control Module",
    "notes": "Identified via the SDB DWORD signature check.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "s7ag_read_szl API call",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "API Call",
    "notes": "Used to check the PLC type.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "s7blk_findfirst API call",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "API Call",
    "notes": "Used to enumerate System Data Blocks.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "s7blk_findnext API call",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "API Call",
    "notes": "Used to continue enumeration of System Data Blocks.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "System Data Blocks (SDB)",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "PLC Data Block",
    "notes": "Memory structures enumerated and parsed by Stuxnet.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Vacon NX frequency converter drive",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Frequency Converter Drive",
    "notes": "Associated with hex value 9500h and manufactured by Vacon in Finland.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Hardware"
  },
  {
    "observable_value": "7050h",
    "artifact_details": "Actionable-Atomic",
    "data_source": "memory",
    "fine_classification": "Hex Value",
    "notes": "Value identifying KFC750V3 frequency converter drive",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Hex Values – new"
  },
  {
    "observable_value": "9500h",
    "artifact_details": "Actionable-Atomic",
    "data_source": "memory",
    "fine_classification": "Hex Value",
    "notes": "Value identifying Vacon NX frequency converter drive",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)\n \n [Stuxnet](https://attack.mitre.org/software/S0603) was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Hex Values – new"
  },
  {
    "observable_value": "Current state of a valve",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Sensor Reading",
    "notes": "Example of peripheral information passed to the PLC",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) copies the input area of an I/O image into data blocks with a one second interval between copies, forming a 21 second recording of the input area. The input area contains information being passed to the PLC from a peripheral. For example, the current state of a valve or the temperature of a device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "Data blocks recording (21-second recording with one-second intervals)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "ICS Data Block Recording",
    "notes": "Created by copying the input area at one second intervals over a 21 second period",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) copies the input area of an I/O image into data blocks with a one second interval between copies, forming a 21 second recording of the input area. The input area contains information being passed to the PLC from a peripheral. For example, the current state of a valve or the temperature of a device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "Input area of an I/O image",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC I/O Image",
    "notes": "Represents the area holding data passed from a peripheral to the PLC",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) copies the input area of an I/O image into data blocks with a one second interval between copies, forming a 21 second recording of the input area. The input area contains information being passed to the PLC from a peripheral. For example, the current state of a valve or the temperature of a device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Temperature of a device",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Sensor Reading",
    "notes": "Example of peripheral sensor reading provided to the PLC",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) copies the input area of an I/O image into data blocks with a one second interval between copies, forming a 21 second recording of the input area. The input area contains information being passed to the PLC from a peripheral. For example, the current state of a valve or the temperature of a device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "DP_RECV monitor",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "Monitor",
    "notes": "Identified by name as the monitor recording fields to determine the target system state.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) examines fields recorded by the DP_RECV monitor to determine if the target system is in a particular state of operation. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Hardware"
  },
  {
    "observable_value": "hex string representation of the main Stuxnet DLL executable file",
    "artifact_details": "Described",
    "data_source": "database logs",
    "fine_classification": "Executable File",
    "notes": "Represents the main Stuxnet DLL in hexadecimal format that was inserted into the SQL table.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "https://attack.mitre.org/software/S0603",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "URL",
    "notes": "Direct link to the MITRE ATT&CK entry providing more details about Stuxnet.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: URL",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "urlparse",
    "gross_classification": "URL – new"
  },
  {
    "observable_value": "resource 210",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Resource Identifier",
    "notes": "A numeric internal resource used in the construction of the main Stuxnet DLL.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Identifier"
  },
  {
    "observable_value": "SQL statement that creates a table and inserts a binary value",
    "artifact_details": "Described",
    "data_source": "database logs",
    "fine_classification": "SQL Command",
    "notes": "Describes the SQL command behavior used by Stuxnet, though the exact query string is not provided.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "updated configuration data block",
    "artifact_details": "Mentioned",
    "data_source": "database logs",
    "fine_classification": "Configuration Data",
    "notes": "A configuration block inserted into the table alongside the DLL hex string, without further specifics provided.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "data blocks",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Data Block",
    "notes": "Refers to data blocks generated on the fly by system function blocks.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) calls system function blocks which are part of the operating system running on the PLC. Theyre used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "operating system (on PLC)",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC Operating System",
    "notes": "Generic reference to the operating system running on the PLC.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) calls system function blocks which are part of the operating system running on the PLC. Theyre used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "SFC1",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "PLC Function Block",
    "notes": "Identifier for the system function block used for reading the system clock.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) calls system function blocks which are part of the operating system running on the PLC. Theyre used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "system function blocks",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "PLC Function Block",
    "notes": "Built-in function blocks used by the PLC operating system to execute system tasks.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) calls system function blocks which are part of the operating system running on the PLC. Theyre used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "DP_SEND primitive",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "Used by Stuxnet to send the two network bursts. This primitive is referred to without further technical details.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Frequency converter drives",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Device",
    "notes": "Devices whose parameters can be remotely configured via Profibus; central to the procedureâ€™s target behavior modifications.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "Maximum frequency change record",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "ICS Command",
    "notes": "A record within a network frame that contains instructions to change the maximum frequency, affecting motor operating speed.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Network bursts",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Traffic Event",
    "notes": "Two bursts of network traffic sent in states 3 and 4; described at a high level without specific packet details.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Network Traffic – new"
  },
  {
    "observable_value": "Profibus",
    "artifact_details": "Mentioned",
    "data_source": "network logs / ICS network traffic",
    "fine_classification": "Industrial Communication Protocol",
    "notes": "A standard protocol used for remotely configuring the frequency converter drives, mentioned as the medium for configuration.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "Stuxnet (MITRE S0603)",
    "artifact_details": "Described",
    "data_source": "system logs, network logs",
    "fine_classification": "Software/Tool",
    "notes": "A well-known malware referenced with a MITRE ATT&CK link, active in the described procedure.",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "parameters in frequency drives",
    "artifact_details": "Mentioned",
    "data_source": "device config",
    "fine_classification": "Device Configuration Value",
    "notes": "Generic reference to configurable attributes in converter devices",
    "description": "In states 3 and 4 [Stuxnet](https://attack.mitre.org/software/S0603) sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Hook specific APIs used to open project files",
    "artifact_details": "Mentioned",
    "data_source": "application logs",
    "fine_classification": "API Hook",
    "notes": "The procedure mentions the action of hooking APIs without specifying exact API names.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) modifies the Import Address Tables DLLs to hook specific APIs that are used to open project files. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "Import Address Tables (DLLs)",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "Dynamic-Link Library",
    "notes": "Refers to the IAT section within DLL files that is modified by the malware; no unique identifiers provided.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) modifies the Import Address Tables DLLs to hook specific APIs that are used to open project files. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "pefile",
    "gross_classification": "File"
  },
  {
    "observable_value": "Project files",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "File",
    "notes": "Generic reference to files being opened; no specific file extensions or characteristics provided.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) modifies the Import Address Tables DLLs to hook specific APIs that are used to open project files. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "extrac32",
    "artifact_details": "Actionable-Atomic",
    "data_source": "Process execution logs",
    "fine_classification": "Executable Command",
    "notes": "A Windows command-line utility used for extracting files from CAB archives.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "saved CAB file",
    "artifact_details": "Mentioned",
    "data_source": "File system logs",
    "fine_classification": "Archive File",
    "notes": "A cabinet archive file used to store the Stuxnet payload.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": "cabextract",
    "gross_classification": "File"
  },
  {
    "observable_value": "set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);",
    "artifact_details": "Actionable-Atomic",
    "data_source": "Database logs",
    "fine_classification": "SQL Command",
    "notes": "SQL code executed to extract and run Stuxnet from the CAB file.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "xp_cmdshell",
    "artifact_details": "Actionable-Atomic",
    "data_source": "Database logs",
    "fine_classification": "SQL Stored Procedure",
    "notes": "Microsoft SQL Server stored procedure used to execute OS-level commands.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "SQL code with xp_cmdshell",
    "artifact_details": "Actionable-Atomic",
    "data_source": "database logs",
    "fine_classification": "SQL Command",
    "notes": "Used by Stuxnet to execute OS-level commands from SQL Server via CAB file",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Yes",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "sqlparse",
    "gross_classification": "Command"
  },
  {
    "observable_value": "code blocks",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Code snippet",
    "notes": "Generic blocks of code downloaded to the PLC as part of the infection sequence.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603)'s infection sequence consists of code blocks and data blocks that will be downloaded to the PLC to alter its behavior. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "Infected configuration file",
    "artifact_details": "Mentioned",
    "data_source": "file system logs",
    "fine_classification": "File",
    "notes": "Describes a configuration file delivered via USB that, when opened, infects target systems.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) was able to self-replicate by being spread through removable drives. A willing insider or unknown third party, such as a contractor, may have brought the removable media into the target environment. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) The earliest version of Stuxnet relied on physical installation, infecting target systems when an infected configuration file carried by a USB stick was opened. (Citation: Langer Stuxnet)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "Removable media (USB stick)",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Removable Media",
    "notes": "Generic reference to physical media (also called removable drives) used to introduce malware into the target environment.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) was able to self-replicate by being spread through removable drives. A willing insider or unknown third party, such as a contractor, may have brought the removable media into the target environment. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) The earliest version of Stuxnet relied on physical installation, infecting target systems when an infected configuration file carried by a USB stick was opened. (Citation: Langer Stuxnet)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "hardcoded password (WinCC database server)",
    "artifact_details": "Mentioned",
    "data_source": "Application configuration files",
    "fine_classification": "Credential",
    "notes": "The actual password value is not provided, so it cannot be directly used for detection.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) uses a hardcoded password in the WinCC software's database server as one of the mechanisms used to propagate to nearby systems. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Credential"
  },
  {
    "observable_value": "WinCC software's database server",
    "artifact_details": "Mentioned",
    "data_source": "ICS data (system logs or configuration files)",
    "fine_classification": "Software/Tool",
    "notes": "Refers to the specific component of Siemens WinCC software exploited by Stuxnet.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) uses a hardcoded password in the WinCC software's database server as one of the mechanisms used to propagate to nearby systems. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "DLL files associated with WinCC Simatic manager",
    "artifact_details": "Mentioned",
    "data_source": "file system logs",
    "fine_classification": "File",
    "notes": "Generic DLLs used by the WinCC Simatic manager which become infected.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "malicious DLL loaded by the manager",
    "artifact_details": "Mentioned",
    "data_source": "process logs",
    "fine_classification": "File",
    "notes": "The DLL that is executed when xyz.dll is absent from its designated locations.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "project file (WinCC Simatic project file)",
    "artifact_details": "Mentioned",
    "data_source": "file system",
    "fine_classification": "File",
    "notes": "A project file used by the WinCC Simatic manager that becomes infected when opened with a compromised manager.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "WinCC Simatic manager",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Software/Tool",
    "notes": "Siemens proprietary software used to open project files in an industrial control system.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "xyz.dll",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file system",
    "fine_classification": "File",
    "notes": "A specific DLL file that is searched for by the modified project file; if not found, a malicious DLL is loaded.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "uninfected project file",
    "artifact_details": "Described",
    "data_source": "file system",
    "fine_classification": "Project File",
    "notes": "File becomes infected when opened with compromised Simatic manager",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "modified data file",
    "artifact_details": "Described",
    "data_source": "file system",
    "fine_classification": "Config/Data File",
    "notes": "Triggers search behavior for DLL when opened by Simatic manager",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Data block DB890",
    "artifact_details": "Actionable-Atomic",
    "data_source": "PLC/ICS data",
    "fine_classification": "PLC Data Block",
    "notes": "Siemens PLC memory block monitored by Stuxnet.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) uses a thread to monitor a data block DB890 of sequence A or B. This thread is constantly running and probing this block (every 5 minutes). On an infected PLC, if block DB890 is found and contains a special magic value (used by Stuxnet to identify his own block DB890), this blocks data can be read and written. This thread is likely used to optimize the way sequences A and B work, and modify their behavior when the Step7 editor is opened. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "special magic value in DB890",
    "artifact_details": "Actionable-Atomic",
    "data_source": "PLC/ICS data",
    "fine_classification": "PLC Data Block Content (Magic Value)",
    "notes": "Unique marker used by Stuxnet to identify its own DB890 block.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) uses a thread to monitor a data block DB890 of sequence A or B. This thread is constantly running and probing this block (every 5 minutes). On an infected PLC, if block DB890 is found and contains a special magic value (used by Stuxnet to identify his own block DB890), this blocks data can be read and written. This thread is likely used to optimize the way sequences A and B work, and modify their behavior when the Step7 editor is opened. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Step7 editor",
    "artifact_details": "Mentioned",
    "data_source": "System/application logs on engineering workstations",
    "fine_classification": "Software/Tool",
    "notes": "Siemens PLC programming tool that, when opened, modifies the behavior of sequences A and B.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) uses a thread to monitor a data block DB890 of sequence A or B. This thread is constantly running and probing this block (every 5 minutes). On an infected PLC, if block DB890 is found and contains a special magic value (used by Stuxnet to identify his own block DB890), this blocks data can be read and written. This thread is likely used to optimize the way sequences A and B work, and modify their behavior when the Step7 editor is opened. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "command and control servers",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "Generic reference to C2 endpoints without specific identifying details.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) attempts to contact command and control servers on port 80 to send basic information about the computer it has compromised. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "port 80",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "Specifies a well-known HTTP port number used by the malware for C2 communication.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) attempts to contact command and control servers on port 80 to send basic information about the computer it has compromised. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "sp_addextendedproc",
    "artifact_details": "Actionable-Atomic",
    "data_source": "database logs",
    "fine_classification": "SQL Command",
    "notes": "A standard SQL Server stored procedure used to add extended procedures, manipulated in this attack scenario.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) executes malicious SQL commands in the WinCC database server to propagate to remote systems. The malicious SQL commands include xp_cmdshell, sp_dumpdbilog, and sp_addextendedproc. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "sp_dumpdbilog",
    "artifact_details": "Actionable-Atomic",
    "data_source": "database logs",
    "fine_classification": "SQL Command",
    "notes": "A malicious SQL stored procedure introduced by Stuxnet, not part of standard documentation.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) executes malicious SQL commands in the WinCC database server to propagate to remote systems. The malicious SQL commands include xp_cmdshell, sp_dumpdbilog, and sp_addextendedproc. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "WinCC database server",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Database Server",
    "notes": "The WinCC database server is a proprietary SCADA system component where the malicious SQL commands are executed.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) executes malicious SQL commands in the WinCC database server to propagate to remote systems. The malicious SQL commands include xp_cmdshell, sp_dumpdbilog, and sp_addextendedproc. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Server"
  },
  {
    "observable_value": "critical parameters",
    "artifact_details": "Described",
    "data_source": "memory, ICS config",
    "fine_classification": "Configuration Parameter",
    "notes": "Values manipulated by Stuxnet to change system behavior or cause damage",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) can reprogram a PLC and change critical parameters in such a way that legitimate commands can be overridden or intercepted. In addition, Stuxnet can apply inappropriate command sequences or parameters to cause damage to property. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "inappropriate command sequences",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Command Sequence",
    "notes": "Used by Stuxnet to harm physical systems",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) can reprogram a PLC and change critical parameters in such a way that legitimate commands can be overridden or intercepted. In addition, Stuxnet can apply inappropriate command sequences or parameters to cause damage to property. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "PLCs",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "PLC",
    "notes": "Generic reference to Programmable Logic Controllers in industrial control systems.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects PLCs with different code depending on the characteristics of the target system. An infection sequence consists of code blocks and data blocks that will be downloaded to the PLC to alter its behavior. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "OB1",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "PLC Block",
    "notes": "Infected by Stuxnet to execute its malicious code at the start of a cycle.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects OB1 so that its malicious code sequence is executed at the start of a cycle. It also infects OB35. OB35 acts as a watchdog, and on certain conditions, it can stop the execution of OB1. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "OB35",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "PLC Block",
    "notes": "Acts as a watchdog and can stop the execution of OB1 under certain conditions.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) infects OB1 so that its malicious code sequence is executed at the start of a cycle. It also infects OB35. OB35 acts as a watchdog, and on certain conditions, it can stop the execution of OB1. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "Step 7 projects",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Project File",
    "notes": "Refers generally to Siemens Step 7 project files without specifying unique identifiers.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) copies itself into Step 7 projects in such a way that it automatically executes when the Step 7 project is loaded. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "I/O image",
    "artifact_details": "Mentioned",
    "data_source": "ICS data/HMI/PLC logs",
    "fine_classification": "ICS I/O Snapshot",
    "notes": "Refers to the manipulated snapshot of input/output statuses that is altered to evade detection.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) manipulates the view of operators replaying process input and manipulating the I/O image to evade detection and inhibit protection functions. (Citation: Langer Stuxnet) (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "ICS I/O Snapshot – new"
  },
  {
    "observable_value": "process input",
    "artifact_details": "Mentioned",
    "data_source": "ICS process/control logs",
    "fine_classification": "ICS Process Data",
    "notes": "Generic reference to the industrial process signals that are replayed by the malware.",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) manipulates the view of operators replaying process input and manipulating the I/O image to evade detection and inhibit protection functions. (Citation: Langer Stuxnet) (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Data"
  },
  {
    "observable_value": "peripheral output",
    "artifact_details": "Mentioned",
    "data_source": "ICS data, PLC logs",
    "fine_classification": "ICS Command",
    "notes": "Represents the output instructions from the PLC that are intercepted.",
    "description": "When the peripheral output is written to, sequence C intercepts the output and ensures it is not written to the process image output. The output is the instructions the PLC sends to a device to change its operating behavior. By intercepting the peripheral output, [Stuxnet](https://attack.mitre.org/software/S0603) prevents an operator from noticing unauthorized commands sent to the peripheral. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "process image output",
    "artifact_details": "Mentioned",
    "data_source": "ICS data, PLC logs",
    "fine_classification": "ICS Command",
    "notes": "The intended output channel that would normally send commands to the device.",
    "description": "When the peripheral output is written to, sequence C intercepts the output and ensures it is not written to the process image output. The output is the instructions the PLC sends to a device to change its operating behavior. By intercepting the peripheral output, [Stuxnet](https://attack.mitre.org/software/S0603) prevents an operator from noticing unauthorized commands sent to the peripheral. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "DP_RECV",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS data",
    "fine_classification": "PLC Block",
    "notes": "PLC block associated with data reception, identified as infected.",
    "description": "One of [Stuxnet](https://attack.mitre.org/software/S0603)'s rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets PLC code is not discovered or damaged. (Citation: Langer Stuxnet)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "read requests for malicious code blocks",
    "artifact_details": "Described",
    "data_source": "system logs, ICS command logs",
    "fine_classification": "Memory Access Request",
    "notes": "Intercepted by rootkit to prevent detection of embedded malicious code",
    "description": "One of [Stuxnet](https://attack.mitre.org/software/S0603)'s rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets PLC code is not discovered or damaged. (Citation: Langer Stuxnet)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Memory – new"
  },
  {
    "observable_value": "write requests that could overwrite Stuxnet code",
    "artifact_details": "Described",
    "data_source": "system logs, ICS command logs",
    "fine_classification": "Memory Write Attempt",
    "notes": "Intercepted and manipulated to protect Stuxnet's persistence on PLCs",
    "description": "One of [Stuxnet](https://attack.mitre.org/software/S0603)'s rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets PLC code is not discovered or damaged. (Citation: Langer Stuxnet)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Memory – new"
  },
  {
    "observable_value": "315-2 CPU",
    "artifact_details": "Described",
    "data_source": "ICS device logs",
    "fine_classification": "Industrial Controller (CPU)",
    "notes": "Controller receiving data from frequency converter drives via communication modules.",
    "description": "DP_RECV is the name of a standard function block used by network coprocessors. It is used to receive network frames on the Profibus a standard industrial network bus used for distributed I/O. The original block is copied to FC1869, and then replaced by a malicious block. Each time the function is used to receive a packet, the malicious [Stuxnet](https://attack.mitre.org/software/S0603) block takes control: it will call the original DP_RECV in FC1869 and then perform postprocessing on the packet data. The replaced DP_RECV block (later on referred to as the DP_RECV monitor) is meant to monitor data sent by the frequency converter drives to the 315-2 CPU via CP 342-5 Profibus communication modules. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "CP 342-5",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS device inventory",
    "fine_classification": "Profibus Communication Module",
    "notes": "Communication module used for Profibus networking.",
    "description": "DP_RECV is the name of a standard function block used by network coprocessors. It is used to receive network frames on the Profibus a standard industrial network bus used for distributed I/O. The original block is copied to FC1869, and then replaced by a malicious block. Each time the function is used to receive a packet, the malicious [Stuxnet](https://attack.mitre.org/software/S0603) block takes control: it will call the original DP_RECV in FC1869 and then perform postprocessing on the packet data. The replaced DP_RECV block (later on referred to as the DP_RECV monitor) is meant to monitor data sent by the frequency converter drives to the 315-2 CPU via CP 342-5 Profibus communication modules. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "FC1869",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS system configuration",
    "fine_classification": "Function Block Memory Location",
    "notes": "Memory location where the original DP_RECV block is copied.",
    "description": "DP_RECV is the name of a standard function block used by network coprocessors. It is used to receive network frames on the Profibus a standard industrial network bus used for distributed I/O. The original block is copied to FC1869, and then replaced by a malicious block. Each time the function is used to receive a packet, the malicious [Stuxnet](https://attack.mitre.org/software/S0603) block takes control: it will call the original DP_RECV in FC1869 and then perform postprocessing on the packet data. The replaced DP_RECV block (later on referred to as the DP_RECV monitor) is meant to monitor data sent by the frequency converter drives to the 315-2 CPU via CP 342-5 Profibus communication modules. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "frequency converter drives",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "Industrial Control Device",
    "notes": "Generic term for drives sending data from frequency conversion equipment.",
    "description": "DP_RECV is the name of a standard function block used by network coprocessors. It is used to receive network frames on the Profibus a standard industrial network bus used for distributed I/O. The original block is copied to FC1869, and then replaced by a malicious block. Each time the function is used to receive a packet, the malicious [Stuxnet](https://attack.mitre.org/software/S0603) block takes control: it will call the original DP_RECV in FC1869 and then perform postprocessing on the packet data. The replaced DP_RECV block (later on referred to as the DP_RECV monitor) is meant to monitor data sent by the frequency converter drives to the 315-2 CPU via CP 342-5 Profibus communication modules. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "imain.bin",
    "artifact_details": "Actionable-Atomic",
    "data_source": "File system logs",
    "fine_classification": "File",
    "notes": "Binary payload used by Triton malware",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "PowerPC shellcode",
    "artifact_details": "Described",
    "data_source": "Memory dumps",
    "fine_classification": "Shellcode",
    "notes": "Syscalls are implemented in this architecture-specific shellcode",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "Triton",
    "artifact_details": "Described",
    "data_source": "ICS system logs",
    "fine_classification": "Software/Tool",
    "notes": "Malware name with MITRE ATT&CK identifier S1009",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "Full: Tool",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "TsHi.ExplExec",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS system logs",
    "fine_classification": "ICS Command",
    "notes": "Function used to execute commands on the controller",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "TsHi.ExplReadRam(Ex)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS system logs",
    "fine_classification": "ICS Command",
    "notes": "Function used to read controller memory via syscalls",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "TsHi.ExplWriteRam(Ex)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS system logs",
    "fine_classification": "ICS Command",
    "notes": "Function used to write to controller memory via syscalls",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "Triconex Safety Instrumented System",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System",
    "notes": "Target system onto which programs were downloaded.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leveraged the TriStation protocol to download programs onto Triconex Safety Instrumented System. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "System"
  },
  {
    "observable_value": "TriStation protocol",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "ICS Protocol",
    "notes": "Protocol leveraged by Triton to download programs.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leveraged the TriStation protocol to download programs onto Triconex Safety Instrumented System. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "inject.bin",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "Executable File",
    "notes": "Tritonâ€™s injector binary that masquerades as a standard compiled PowerPC program for the Tricon.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s injector, inject.bin, masquerades as a standard compiled PowerPC program for the Tricon. (Citation: DHS CISA February 2019)\n \n [Triton](https://attack.mitre.org/software/S1009) was configured to masquerade as trilog.exe, which is the Triconex software for analyzing SIS logs.(Citation: FireEye TRITON)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "trilog.exe",
    "artifact_details": "Actionable-Atomic",
    "data_source": "system logs",
    "fine_classification": "Executable File",
    "notes": "Configured by Triton to masquerade as the Triconex software used for analyzing SIS logs.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s injector, inject.bin, masquerades as a standard compiled PowerPC program for the Tricon. (Citation: DHS CISA February 2019)\n \n [Triton](https://attack.mitre.org/software/S1009) was configured to masquerade as trilog.exe, which is the Triconex software for analyzing SIS logs.(Citation: FireEye TRITON)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "Python script",
    "artifact_details": "Mentioned",
    "data_source": "File system logs",
    "fine_classification": "Software/Tool",
    "notes": "Generic Python script used by Triton for network scanning",
    "description": "[Triton](https://attack.mitre.org/software/S1009) uses a Python script that is capable of detecting Triconex controllers on the network by sending a specific UDP broadcast packet over port 1502. (Citation: DHS CISA February 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Triconex controllers",
    "artifact_details": "Mentioned",
    "data_source": "Network logs",
    "fine_classification": "Industrial Control System (ICS) Device",
    "notes": "Target ICS devices detected by the Python script",
    "description": "[Triton](https://attack.mitre.org/software/S1009) uses a Python script that is capable of detecting Triconex controllers on the network by sending a specific UDP broadcast packet over port 1502. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "UDP broadcast packet over port 1502",
    "artifact_details": "Described",
    "data_source": "Network traffic logs",
    "fine_classification": "Network Packet",
    "notes": "Packet sent to detect Triconex controllers",
    "description": "[Triton](https://attack.mitre.org/software/S1009) uses a Python script that is capable of detecting Triconex controllers on the network by sending a specific UDP broadcast packet over port 1502. (Citation: DHS CISA February 2019)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Data"
  },
  {
    "observable_value": "controller",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "ICS Controller",
    "notes": "The target device to which Triton applies its actions.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) would reset the controller to the previous state over TriStation and if this failed it would write a dummy program to memory in what was likely an attempt at anti-forensics. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "dummy program",
    "artifact_details": "Mentioned",
    "data_source": "Controller memory dumps",
    "fine_classification": "Software/Tool",
    "notes": "A generic program written to memory likely to mislead forensic analysis.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) would reset the controller to the previous state over TriStation and if this failed it would write a dummy program to memory in what was likely an attempt at anti-forensics. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "TriStation",
    "artifact_details": "Mentioned",
    "data_source": "ICS network logs",
    "fine_classification": "ICS Protocol",
    "notes": "Used as the communication medium to reset the controller.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) would reset the controller to the previous state over TriStation and if this failed it would write a dummy program to memory in what was likely an attempt at anti-forensics. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "Tricon MP3008 firmware version 10.010.4",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "Firmware",
    "notes": "Specific firmware version affected by the vulnerability exploited by Triton.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges. (Citation: DHS CISA February 2019)",
    "STIX_supported": "Full: Software",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Firmware"
  },
  {
    "observable_value": "insecurely-written system call",
    "artifact_details": "Described",
    "data_source": "system logs, memory",
    "fine_classification": "OS System Call",
    "notes": "System call in Tricon firmware used by attacker to perform arbitrary writes",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "arbitrary 2-byte write primitive",
    "artifact_details": "Described",
    "data_source": "memory",
    "fine_classification": "Exploit Technique",
    "notes": "Write primitive achieved by exploiting system call to gain privileges",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Attack Technique"
  },
  {
    "observable_value": "argument-setting",
    "artifact_details": "Described",
    "data_source": "firmware image",
    "fine_classification": "Code snippet",
    "notes": "A component from Triton injected into the targetâ€™s program table.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s argument-setting and inject.bin shellcode are added to the program table on the Tricon so that they are executed by the firmware once each cycle. (Citation: DHS CISA February 2019) (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "inject.bin shellcode",
    "artifact_details": "Described",
    "data_source": "firmware image",
    "fine_classification": "Code snippet",
    "notes": "A binary payload (shellcode) named 'inject.bin' added for execution by the firmware.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s argument-setting and inject.bin shellcode are added to the program table on the Tricon so that they are executed by the firmware once each cycle. (Citation: DHS CISA February 2019) (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "program table",
    "artifact_details": "Described",
    "data_source": "device firmware",
    "fine_classification": "ICS Configuration",
    "notes": "The configuration table in the Tricon device where the payload components are inserted.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s argument-setting and inject.bin shellcode are added to the program table on the Tricon so that they are executed by the firmware once each cycle. (Citation: DHS CISA February 2019) (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Configuration"
  },
  {
    "observable_value": "Tricon",
    "artifact_details": "Mentioned",
    "data_source": "ICS device logs",
    "fine_classification": "PLC",
    "notes": "The targeted industrial control system device whose firmware executes the injected payload each cycle.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s argument-setting and inject.bin shellcode are added to the program table on the Tricon so that they are executed by the firmware once each cycle. (Citation: DHS CISA February 2019) (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "library.zip",
    "artifact_details": "Described",
    "data_source": "file system",
    "fine_classification": "Archive File",
    "notes": "Separate file containing modules that implement the TriStation communication protocol and supporting components.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) communicates with Triconex controllers using a custom component framework written entirely in Python. The modules that implement the TriStation communication protocol and other supporting components are found in a separate file -- library.zip -- the main script that employs this functionality is compiled into a standalone py2exe Windows executable -- trilog.exe which includes a Python environment. (Citation: DHS CISA February 2019)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "TriStation communication protocol",
    "artifact_details": "Described",
    "data_source": "network logs",
    "fine_classification": "ICS Communication Protocol",
    "notes": "Custom protocol implemented in modules to communicate with Triconex controllers.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) communicates with Triconex controllers using a custom component framework written entirely in Python. The modules that implement the TriStation communication protocol and other supporting components are found in a separate file -- library.zip -- the main script that employs this functionality is compiled into a standalone py2exe Windows executable -- trilog.exe which includes a Python environment. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "py2exe",
    "artifact_details": "Described",
    "data_source": "build environment",
    "fine_classification": "Packaging Tool",
    "notes": "Tool used to convert Python scripts into Windows executables",
    "description": "[Triton](https://attack.mitre.org/software/S1009) communicates with Triconex controllers using a custom component framework written entirely in Python. The modules that implement the TriStation communication protocol and other supporting components are found in a separate file -- library.zip -- the main script that employs this functionality is compiled into a standalone py2exe Windows executable -- trilog.exe which includes a Python environment. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "custom component framework in Python",
    "artifact_details": "Described",
    "data_source": "script execution logs",
    "fine_classification": "Script Framework",
    "notes": "Python-based framework used by Triton to communicate with Triconex controllers",
    "description": "[Triton](https://attack.mitre.org/software/S1009) communicates with Triconex controllers using a custom component framework written entirely in Python. The modules that implement the TriStation communication protocol and other supporting components are found in a separate file -- library.zip -- the main script that employs this functionality is compiled into a standalone py2exe Windows executable -- trilog.exe which includes a Python environment. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "python",
    "gross_classification": "Code"
  },
  {
    "observable_value": "TsHi.py",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file system",
    "fine_classification": "File/Script",
    "notes": "A Python script file containing instances of halt and run functions.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) has the ability to halt or run a program through the TriStation protocol. TsHi.py contains instances of halt and run functions being executed. (Citation: MDudek-ICS)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "halt function in TsHi.py",
    "artifact_details": "Actionable-Computed",
    "data_source": "script execution logs",
    "fine_classification": "Python Function Call",
    "notes": "Python function observed in Triton script used to stop controller execution",
    "description": "[Triton](https://attack.mitre.org/software/S1009) has the ability to halt or run a program through the TriStation protocol. TsHi.py contains instances of halt and run functions being executed. (Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": "python",
    "gross_classification": "Code"
  },
  {
    "observable_value": "run function in TsHi.py",
    "artifact_details": "Actionable-Computed",
    "data_source": "script execution logs",
    "fine_classification": "Python Function Call",
    "notes": "Python function observed in Triton script used to start controller execution",
    "description": "[Triton](https://attack.mitre.org/software/S1009) has the ability to halt or run a program through the TriStation protocol. TsHi.py contains instances of halt and run functions being executed. (Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": "python",
    "gross_classification": "Code"
  },
  {
    "observable_value": "UDP port 1502",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "This is the default UDP port used by TriStations for communication",
    "description": "[Triton](https://attack.mitre.org/software/S1009) uses TriStations default UDP port, 1502, to communicate with devices. (Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "Device Firmware Region",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Firmware",
    "notes": "Refers to the region of memory within the safety controller containing firmware code; described generally without unique identifiers.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) is able to read, write and execute code in memory on the safety controller at an arbitrary address within the devices firmware region. This allows the malware to make changes to the running firmware in memory and modify how the device operates. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Firmware"
  },
  {
    "observable_value": "Safety Controller",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Device",
    "notes": "General reference to the device component that controls safety operations without specific vendor details.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) is able to read, write and execute code in memory on the safety controller at an arbitrary address within the devices firmware region. This allows the malware to make changes to the running firmware in memory and modify how the device operates. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "arbitrary address access",
    "artifact_details": "Actionable-Computed",
    "data_source": "memory",
    "fine_classification": "Memory Access Pattern",
    "notes": "Technique that allows Triton to modify running firmware at chosen locations",
    "description": "[Triton](https://attack.mitre.org/software/S1009) is able to read, write and execute code in memory on the safety controller at an arbitrary address within the devices firmware region. This allows the malware to make changes to the running firmware in memory and modify how the device operates. (Citation: DHS CISA February 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Memory – new"
  },
  {
    "observable_value": "TS_cnames.py",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file system",
    "fine_classification": "File",
    "notes": "Python file containing default definitions for program state and key state.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for program state (TS_progstate). Program state is referenced in TsHi.py.(Citation: MDudek-ICS)\n \n [Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for key state (TS_keystate). Key state is referenced in TsHi.py.(Citation: MDudek-ICS)",
    "STIX_supported": "Full: File",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "File"
  },
  {
    "observable_value": "TS_keystate",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file content",
    "fine_classification": "Code snippet",
    "notes": "Default definition for key state in TS_cnames.py.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for program state (TS_progstate). Program state is referenced in TsHi.py.(Citation: MDudek-ICS)\n \n [Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for key state (TS_keystate). Key state is referenced in TsHi.py.(Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "TS_progstate",
    "artifact_details": "Actionable-Atomic",
    "data_source": "file content",
    "fine_classification": "Code snippet",
    "notes": "Default definition for program state in TS_cnames.py.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for program state (TS_progstate). Program state is referenced in TsHi.py.(Citation: MDudek-ICS)\n \n [Triton](https://attack.mitre.org/software/S1009) contains a file named TS_cnames.py which contains default definitions for key state (TS_keystate). Key state is referenced in TsHi.py.(Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "SafeAppendProgramMod",
    "artifact_details": "Described",
    "data_source": "ICS data",
    "fine_classification": "ICS Command",
    "notes": "Specific ICS command invoked by Triton to transfer payloads",
    "description": "[Triton](https://attack.mitre.org/software/S1009) calls the SafeAppendProgramMod to transfer its payloads to the Tricon. Part of this call includes preforming a program upload. (Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "program upload",
    "artifact_details": "Described",
    "data_source": "system logs, ICS command logs",
    "fine_classification": "Program Transfer Operation",
    "notes": "Process involved in transferring new or modified code to the controller as part of the SafeAppendProgramMod call",
    "description": "[Triton](https://attack.mitre.org/software/S1009) calls the SafeAppendProgramMod to transfer its payloads to the Tricon. Part of this call includes preforming a program upload. (Citation: MDudek-ICS)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "PLC"
  },
  {
    "observable_value": "get main processor diagnostic data TriStation command",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS logs",
    "fine_classification": "ICS Command",
    "notes": "The normal TriStation command which has its function pointer altered by inject.bin.",
    "description": "[Triton](https://attack.mitre.org/software/S1009)'s injector, inject.bin, changes the function pointer of the 'get main processor diagnostic data' TriStation command to the address of imain.bin so that it is executed prior to the normal handler. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "program allocation API",
    "artifact_details": "Mentioned",
    "data_source": "System and application logs",
    "fine_classification": "API Function",
    "notes": "No additional detail provided beyond its functionality.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a reconstructed TriStation protocol within its framework to trigger APIs related to program download, program allocation, and program changes. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "program changes API",
    "artifact_details": "Mentioned",
    "data_source": "System and application logs",
    "fine_classification": "API Function",
    "notes": "No additional detail provided beyond its functionality.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a reconstructed TriStation protocol within its framework to trigger APIs related to program download, program allocation, and program changes. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "program download API",
    "artifact_details": "Mentioned",
    "data_source": "System and application logs",
    "fine_classification": "API Function",
    "notes": "No additional detail provided beyond its functionality.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a reconstructed TriStation protocol within its framework to trigger APIs related to program download, program allocation, and program changes. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "API"
  },
  {
    "observable_value": "Reconstructed TriStation protocol",
    "artifact_details": "Described",
    "data_source": "ICS network traffic logs",
    "fine_classification": "ICS Protocol",
    "notes": "Reverse-engineered version used within the Triton framework.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) leverages a reconstructed TriStation protocol within its framework to trigger APIs related to program download, program allocation, and program changes. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Protocol"
  },
  {
    "observable_value": "DCS",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Distributed Control System",
    "notes": "Referenced as the control system employed to create an unsafe state or hazard.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) has the capability to reprogram the SIS logic to allow unsafe conditions to persist or reprogram the SIS to allow an unsafe state while using the DCS to create an unsafe state or hazard. (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Control System – new"
  },
  {
    "observable_value": "SIS",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Safety Instrumented System",
    "notes": "Refers generically to the safety system logic targeted for reprogramming.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) has the capability to reprogram the SIS logic to allow unsafe conditions to persist or reprogram the SIS to allow an unsafe state while using the DCS to create an unsafe state or hazard. (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "Triconex systems",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "Industrial Control System Device",
    "notes": "Refers to control systems with continuous detection capabilities such as firmware checksum and memory integrity verification.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) disables a firmware RAM/ROM consistency check after injects a payload (imain.bin) into the firmware memory region. (Citation: DHS CISA February 2019) (Citation: ICS-CERT December 2018) (Citation: Schneider Electric January 2018) Triconex systems include continuous means of detection including checksums for firmware and program integrity, memory and memory reference integrity, and configuration. (Citation: The Office of Nuclear Reactor Regulation)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "firmware RAM/ROM consistency check",
    "artifact_details": "Described",
    "data_source": "memory, system logs",
    "fine_classification": "Integrity Check Routine",
    "notes": "Disabled by Triton to avoid detection of injected payloads in memory",
    "description": "[Triton](https://attack.mitre.org/software/S1009) disables a firmware RAM/ROM consistency check after injects a payload (imain.bin) into the firmware memory region. (Citation: DHS CISA February 2019) (Citation: ICS-CERT December 2018) (Citation: Schneider Electric January 2018) Triconex systems include continuous means of detection including checksums for firmware and program integrity, memory and memory reference integrity, and configuration. (Citation: The Office of Nuclear Reactor Regulation)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Code"
  },
  {
    "observable_value": "implant",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "ICS Device",
    "notes": "A generic reference to the target implanted within the ICS environment with which Triton communicates.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) can communicate with the implant utilizing the TriStation 'get main processor diagnostic data' command and looks for a specifically crafted packet body from which it extracts a command value and its arguments. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "specifically crafted packet body",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Packet",
    "notes": "Refers to a network packet whose body is crafted to include a command value and its arguments.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) can communicate with the implant utilizing the TriStation 'get main processor diagnostic data' command and looks for a specifically crafted packet body from which it extracts a command value and its arguments. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Data"
  },
  {
    "observable_value": "TriStation 'get main processor diagnostic data' command",
    "artifact_details": "Actionable-Atomic",
    "data_source": "ICS logs",
    "fine_classification": "ICS Command",
    "notes": "A specific command string used by Triton to communicate with the implant and retrieve diagnostic data.",
    "description": "[Triton](https://attack.mitre.org/software/S1009) can communicate with the implant utilizing the TriStation 'get main processor diagnostic data' command and looks for a specifically crafted packet body from which it extracts a command value and its arguments. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "command value and arguments",
    "artifact_details": "Described",
    "data_source": "memory, ICS command logs",
    "fine_classification": "Command Parameters",
    "notes": "Parsed by the implant from the packet body to trigger specific behaviors",
    "description": "[Triton](https://attack.mitre.org/software/S1009) can communicate with the implant utilizing the TriStation 'get main processor diagnostic data' command and looks for a specifically crafted packet body from which it extracts a command value and its arguments. (Citation: Jos Wetzels January 2018)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Undocumented Technology",
    "parser": NaN,
    "gross_classification": "Command"
  },
  {
    "observable_value": "https://attack.mitre.org/software/S1010",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "URL",
    "notes": "Reference link to the MITRE ATT&CK entry for VPNFilter",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "Full: URL",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "URL – new"
  },
  {
    "observable_value": "iptables",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Firewall Utility",
    "notes": "Linux firewall tool whose configuration is manipulated by the ssler module",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "legitimate HTTP service",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Service",
    "notes": "The intended destination for HTTP traffic after interception and manipulation",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Service"
  },
  {
    "observable_value": "port 8888",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "Port on which the deviceâ€™s local service is listening as the redirection target",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "ps module",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Malware Module",
    "notes": "Module within VPNFilter that inspects and potentially manipulates intercepted web requests",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "ssler module",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Malware Module",
    "notes": "Module within VPNFilter that configures iptables to redirect HTTP traffic",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Module"
  },
  {
    "observable_value": "VPNFilter",
    "artifact_details": "Described",
    "data_source": "system logs",
    "fine_classification": "Software/Tool",
    "notes": "Malware known as VPNFilter targeting network devices; referenced via MITRE ATT&CK",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010)'s ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "Full: Malware",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Software"
  },
  {
    "observable_value": "Basic Authentication",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Authentication Technique",
    "notes": "The malware looks for basic auth credentials in observed traffic.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Authentication Technique – new"
  },
  {
    "observable_value": "modbus-enabled HMI",
    "artifact_details": "Mentioned",
    "data_source": "ICS data",
    "fine_classification": "HMI Device",
    "notes": "Refers to the HMI in industrial control environments communicating via Modbus.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Device"
  },
  {
    "observable_value": "port 502",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Port",
    "notes": "Packets not using this port are further scanned for authentication data.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Connection Port"
  },
  {
    "observable_value": "pre-specified IP address",
    "artifact_details": "Mentioned",
    "data_source": "network logs",
    "fine_classification": "Network Entity",
    "notes": "IP address is referenced but not explicitly provided.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "Full: IPv4-Addr",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "raw socket",
    "artifact_details": "Mentioned",
    "data_source": "system logs",
    "fine_classification": "Network Communication Technique",
    "notes": "Used by the malware to capture network connections.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  },
  {
    "observable_value": "TCP packets (>=150 bytes)",
    "artifact_details": "Actionable-Atomic",
    "data_source": "network logs",
    "fine_classification": "Network Traffic",
    "notes": "The malware filters packets based on a size threshold.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "Full: Network Traffic",
    "proprietary_artifact": "Open/Standard Technology",
    "parser": "Wireshark",
    "gross_classification": "Communication"
  },
  {
    "observable_value": "TP-LINK R600-VPN",
    "artifact_details": "Described",
    "data_source": "ICS device inventory",
    "fine_classification": "Network Entity",
    "notes": "Specific target model mentioned for the malware payload.",
    "description": "The [VPNFilter](https://attack.mitre.org/software/S1010) packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)",
    "STIX_supported": "No",
    "proprietary_artifact": "Proprietary-Documented Technology",
    "parser": NaN,
    "gross_classification": "Unknown"
  }
]
